// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBuyApi.DataBase;

#nullable disable

namespace SmartBuyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230801150635_added-images-2")]
    partial class addedimages2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_FilterNames");

                    b.HasData(
                        new
                        {
                            Id = "BSM9_xRL5F9",
                            CategoryId = "wKnjSPmIfFR",
                            Name = "GraphicCard",
                            PublicName = "Дискретна відеокарта"
                        },
                        new
                        {
                            Id = "tEPOGwsQ6uV",
                            CategoryId = "wKnjSPmIfFR",
                            Name = "Processor",
                            PublicName = "Процесор"
                        },
                        new
                        {
                            Id = "Gff_869-jZr",
                            CategoryId = "wKnjSPmIfFR",
                            Name = "RAM",
                            PublicName = "Обсяг оперативної пам'яті"
                        },
                        new
                        {
                            Id = "TW8pk6QjrN7",
                            CategoryId = "T0sZGYZoMx0",
                            Name = "BatteryCapacity",
                            PublicName = "Ємність акумулятора"
                        },
                        new
                        {
                            Id = "Gks7RQlI6OY",
                            CategoryId = "T0sZGYZoMx0",
                            Name = "DisplayDiagonal",
                            PublicName = "Діагональ екрана"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilterNameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("PublicValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilterNameId");

                    b.ToTable("tbl_FilterValues");

                    b.HasData(
                        new
                        {
                            Id = "jB8mzaE1hyk",
                            FilterNameId = "BSM9_xRL5F9",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3070",
                            StringValue = "RTX 3070"
                        },
                        new
                        {
                            Id = "gRtSCba8f0_",
                            FilterNameId = "BSM9_xRL5F9",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3060",
                            StringValue = "RTX 3060"
                        },
                        new
                        {
                            Id = "FMvpmMtY3Lf",
                            FilterNameId = "BSM9_xRL5F9",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3050",
                            StringValue = "RTX 3050"
                        },
                        new
                        {
                            Id = "tOM9wYFSM5m",
                            FilterNameId = "tEPOGwsQ6uV",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "AMD Ryzen 7",
                            StringValue = "AMD Ryzen 7"
                        },
                        new
                        {
                            Id = "kRcGUTCVox7",
                            FilterNameId = "tEPOGwsQ6uV",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i7",
                            StringValue = "Intel Core i7"
                        },
                        new
                        {
                            Id = "QF7R6vUEqwX",
                            FilterNameId = "tEPOGwsQ6uV",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i5",
                            StringValue = "Intel Core i5"
                        },
                        new
                        {
                            Id = "NfaSQod2V_D",
                            FilterNameId = "Gff_869-jZr",
                            MaxValue = 3.0,
                            MinValue = 0.20000000000000001,
                            PublicValue = "3 ГБ і менше"
                        },
                        new
                        {
                            Id = "yGshjHYpupf",
                            FilterNameId = "Gff_869-jZr",
                            MaxValue = 4.0,
                            MinValue = 4.0,
                            PublicValue = "4 ГБ"
                        },
                        new
                        {
                            Id = "FZeMTwnWGiu",
                            FilterNameId = "Gff_869-jZr",
                            MaxValue = 8.0,
                            MinValue = 6.0,
                            PublicValue = "6 - 8 ГБ"
                        },
                        new
                        {
                            Id = "FKNQkW8QprS",
                            FilterNameId = "Gff_869-jZr",
                            MaxValue = 12.0,
                            MinValue = 10.0,
                            PublicValue = "10 - 12 ГБ"
                        },
                        new
                        {
                            Id = "HBtNSUOs7a7",
                            FilterNameId = "Gff_869-jZr",
                            MaxValue = 24.0,
                            MinValue = 16.0,
                            PublicValue = "16 - 24 ГБ"
                        },
                        new
                        {
                            Id = "411-H4JwzZI",
                            FilterNameId = "TW8pk6QjrN7",
                            MaxValue = 3999.0,
                            MinValue = 3000.0,
                            PublicValue = "3000 - 3999 мА*год "
                        },
                        new
                        {
                            Id = "vbVFAGIZYVA",
                            FilterNameId = "TW8pk6QjrN7",
                            MaxValue = 4999.0,
                            MinValue = 4000.0,
                            PublicValue = "4000 - 4999 мА*год "
                        },
                        new
                        {
                            Id = "tTGpUYFZGTj",
                            FilterNameId = "Gks7RQlI6OY",
                            MaxValue = 5.0,
                            MinValue = 4.5999999999999996,
                            PublicValue = "4.6\" - 5\""
                        },
                        new
                        {
                            Id = "OZOK1uBMsqE",
                            FilterNameId = "Gks7RQlI6OY",
                            MaxValue = 5.5,
                            MinValue = 5.0099999999999998,
                            PublicValue = "5.01\" - 5.5\""
                        },
                        new
                        {
                            Id = "fZufOvohWti",
                            FilterNameId = "Gks7RQlI6OY",
                            MaxValue = 6.0,
                            MinValue = 5.5,
                            PublicValue = "5.5\" - 6\""
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique()
                        .HasFilter("[CategoryId] IS NOT NULL");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = "x97Tc56UjFe",
                            Name = "1_1.webp",
                            ProductId = "lATuB2tGSW_"
                        },
                        new
                        {
                            Id = "aAwYf_tpwW0",
                            Name = "1_2.webp",
                            ProductId = "lATuB2tGSW_"
                        },
                        new
                        {
                            Id = "Tzn3Gp4d3yX",
                            Name = "1_3.webp",
                            ProductId = "lATuB2tGSW_"
                        },
                        new
                        {
                            Id = "HIsQMRSLxbi",
                            Name = "2_1.webp",
                            ProductId = "8fb8bzCLYdL"
                        },
                        new
                        {
                            Id = "NXEoP7ENtZh",
                            Name = "2_2.webp",
                            ProductId = "8fb8bzCLYdL"
                        },
                        new
                        {
                            Id = "8NoumknoaBV",
                            Name = "2_3.webp",
                            ProductId = "8fb8bzCLYdL"
                        },
                        new
                        {
                            Id = "M7SQ5N0S48v",
                            Name = "3_1.webp",
                            ProductId = "i_HvTTIvl3M"
                        },
                        new
                        {
                            Id = "zDlmF_ftCaV",
                            Name = "3_2.webp",
                            ProductId = "i_HvTTIvl3M"
                        },
                        new
                        {
                            Id = "pgSnPV92c3G",
                            Name = "3_3.webp",
                            ProductId = "i_HvTTIvl3M"
                        },
                        new
                        {
                            Id = "S0c1h2uMVMQ",
                            Name = "0_1.webp",
                            ProductId = "ncHPj29LZJE"
                        },
                        new
                        {
                            Id = "l_9dzUVKm2W",
                            Name = "0_2.webp",
                            ProductId = "ncHPj29LZJE"
                        },
                        new
                        {
                            Id = "QOnH0bqyb0S",
                            Name = "0_3.webp",
                            ProductId = "ncHPj29LZJE"
                        },
                        new
                        {
                            Id = "biCmG2yNsIn",
                            Name = "1_1.webp",
                            ProductId = "dU2YoNBYJoc"
                        },
                        new
                        {
                            Id = "kgYzwjoCnC8",
                            Name = "1_2.webp",
                            ProductId = "dU2YoNBYJoc"
                        },
                        new
                        {
                            Id = "ASujxR8NWDy",
                            Name = "1_3.webp",
                            ProductId = "dU2YoNBYJoc"
                        },
                        new
                        {
                            Id = "ciLxH_gFtdR",
                            Name = "2_1.webp",
                            ProductId = "77W1L7Mqd15"
                        },
                        new
                        {
                            Id = "9l2z9hd_krs",
                            Name = "2_2.webp",
                            ProductId = "77W1L7Mqd15"
                        },
                        new
                        {
                            Id = "R3oaZdQg5om",
                            Name = "2_3.webp",
                            ProductId = "77W1L7Mqd15"
                        },
                        new
                        {
                            Id = "8zhXtmz3mSU",
                            Name = "3_1.webp",
                            ProductId = "CbdPjvYaItw"
                        },
                        new
                        {
                            Id = "vIlfBk-p9pR",
                            Name = "3_2.webp",
                            ProductId = "CbdPjvYaItw"
                        },
                        new
                        {
                            Id = "f-i-SX9PdjX",
                            Name = "3_3.webp",
                            ProductId = "CbdPjvYaItw"
                        },
                        new
                        {
                            Id = "gkzCQlPRCpv",
                            Name = "0_1.webp",
                            ProductId = "y5jgwGAQwcG"
                        },
                        new
                        {
                            Id = "KZ9ICjgHpVd",
                            Name = "0_2.webp",
                            ProductId = "y5jgwGAQwcG"
                        },
                        new
                        {
                            Id = "met-DeAxBca",
                            Name = "0_3.webp",
                            ProductId = "y5jgwGAQwcG"
                        },
                        new
                        {
                            Id = "tblL2jTdzWq",
                            Name = "1_1.webp",
                            ProductId = "NgTcBxSsDZl"
                        },
                        new
                        {
                            Id = "Pz2kcGbJD4C",
                            Name = "1_2.webp",
                            ProductId = "NgTcBxSsDZl"
                        },
                        new
                        {
                            Id = "T9CTHH-lZhn",
                            Name = "1_3.webp",
                            ProductId = "NgTcBxSsDZl"
                        },
                        new
                        {
                            Id = "Us04ifIouzq",
                            Name = "2_1.webp",
                            ProductId = "Ohb83MkHkGK"
                        },
                        new
                        {
                            Id = "1lIeL8Ttnrg",
                            Name = "2_2.webp",
                            ProductId = "Ohb83MkHkGK"
                        },
                        new
                        {
                            Id = "iwk9AsuS6Vx",
                            Name = "2_3.webp",
                            ProductId = "Ohb83MkHkGK"
                        },
                        new
                        {
                            Id = "fRmEuToTTcT",
                            Name = "3_1.webp",
                            ProductId = "m9WOBXsv1MJ"
                        },
                        new
                        {
                            Id = "T6_sdqBdv3D",
                            Name = "3_2.webp",
                            ProductId = "m9WOBXsv1MJ"
                        },
                        new
                        {
                            Id = "gxRUU21L145",
                            Name = "3_3.webp",
                            ProductId = "m9WOBXsv1MJ"
                        },
                        new
                        {
                            Id = "WMfPJ7gOD5X",
                            Name = "4_1.webp",
                            ProductId = "R0v7mQzX0U3"
                        },
                        new
                        {
                            Id = "hvciZM99ngR",
                            Name = "4_2.webp",
                            ProductId = "R0v7mQzX0U3"
                        },
                        new
                        {
                            Id = "YzI1V0voApN",
                            Name = "4_3.webp",
                            ProductId = "R0v7mQzX0U3"
                        },
                        new
                        {
                            Id = "s0-EDxU2BU6",
                            Name = "5_1.webp",
                            ProductId = "2GDpnyxwoDW"
                        },
                        new
                        {
                            Id = "vfg6c_mhH19",
                            Name = "5_2.webp",
                            ProductId = "2GDpnyxwoDW"
                        },
                        new
                        {
                            Id = "SoaM810fK6A",
                            Name = "5_3.webp",
                            ProductId = "2GDpnyxwoDW"
                        },
                        new
                        {
                            Id = "-ZYpAcM6d7S",
                            Name = "6_1.webp",
                            ProductId = "T8g7Hz8C6am"
                        },
                        new
                        {
                            Id = "kSa5PidJZcx",
                            Name = "6_2.webp",
                            ProductId = "T8g7Hz8C6am"
                        },
                        new
                        {
                            Id = "iIC6qFxHZ2t",
                            Name = "6_3.webp",
                            ProductId = "T8g7Hz8C6am"
                        },
                        new
                        {
                            Id = "Gh8Ugg7SxUf",
                            Name = "3_1.webp",
                            ProductId = "sWE7aM2sQ_h"
                        },
                        new
                        {
                            Id = "9b7aiG44S5V",
                            Name = "3_2.webp",
                            ProductId = "sWE7aM2sQ_h"
                        },
                        new
                        {
                            Id = "ubcw4nVl2o8",
                            Name = "3_3.webp",
                            ProductId = "sWE7aM2sQ_h"
                        },
                        new
                        {
                            Id = "kOj8gVkrFrd",
                            Name = "4_1.webp",
                            ProductId = "Y6qU3aSTnkc"
                        },
                        new
                        {
                            Id = "joVI-fyvuER",
                            Name = "4_2.webp",
                            ProductId = "Y6qU3aSTnkc"
                        },
                        new
                        {
                            Id = "urwrWqo3kY6",
                            Name = "4_3.webp",
                            ProductId = "Y6qU3aSTnkc"
                        },
                        new
                        {
                            Id = "JPLePGjDSpQ",
                            Name = "5_1.webp",
                            ProductId = "wj_sdXsL58A"
                        },
                        new
                        {
                            Id = "nVCuaAvrk90",
                            Name = "5_2.webp",
                            ProductId = "wj_sdXsL58A"
                        },
                        new
                        {
                            Id = "ItF0oPC3lbK",
                            Name = "5_3.webp",
                            ProductId = "wj_sdXsL58A"
                        },
                        new
                        {
                            Id = "RGJ_8gkhg9z",
                            Name = "6_1.webp",
                            ProductId = "ZOuWZpSFjKt"
                        },
                        new
                        {
                            Id = "U10K1cpA-Sy",
                            Name = "6_2.webp",
                            ProductId = "ZOuWZpSFjKt"
                        },
                        new
                        {
                            Id = "uvFGZtf-DZN",
                            Name = "6_3.webp",
                            ProductId = "ZOuWZpSFjKt"
                        },
                        new
                        {
                            Id = "_Q7rDBFWm6U",
                            Name = "3_1.webp",
                            ProductId = "mEPp7azSjw3"
                        },
                        new
                        {
                            Id = "A3dcdf-KIAp",
                            Name = "3_2.webp",
                            ProductId = "mEPp7azSjw3"
                        },
                        new
                        {
                            Id = "xdKa5Hszu7e",
                            Name = "3_3.webp",
                            ProductId = "mEPp7azSjw3"
                        },
                        new
                        {
                            Id = "xczkYzpi6LR",
                            Name = "4_1.webp",
                            ProductId = "WwrSMoiFbQk"
                        },
                        new
                        {
                            Id = "x4wgu_KM2yy",
                            Name = "4_2.webp",
                            ProductId = "WwrSMoiFbQk"
                        },
                        new
                        {
                            Id = "iOVsog5cKk-",
                            Name = "4_3.webp",
                            ProductId = "WwrSMoiFbQk"
                        },
                        new
                        {
                            Id = "s1e86tvf4ok",
                            Name = "5_1.webp",
                            ProductId = "QLH9Sj-q1My"
                        },
                        new
                        {
                            Id = "HcwZkOC0IJ7",
                            Name = "5_2.webp",
                            ProductId = "QLH9Sj-q1My"
                        },
                        new
                        {
                            Id = "k6RN7wvElFW",
                            Name = "5_3.webp",
                            ProductId = "QLH9Sj-q1My"
                        },
                        new
                        {
                            Id = "kBH34XqUBp2",
                            Name = "6_1.webp",
                            ProductId = "27RFgJUYSdW"
                        },
                        new
                        {
                            Id = "73ldW5j-5b2",
                            Name = "6_2.webp",
                            ProductId = "27RFgJUYSdW"
                        },
                        new
                        {
                            Id = "XFUggek3aP1",
                            Name = "6_3.webp",
                            ProductId = "27RFgJUYSdW"
                        },
                        new
                        {
                            Id = "x_KcAF-F4mK",
                            CategoryId = "wKnjSPmIfFR",
                            Name = "3_1.webp"
                        },
                        new
                        {
                            Id = "Lw7f0r1TtAX",
                            CategoryId = "T0sZGYZoMx0",
                            Name = "5_1.webp"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmartUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SmartUserId");

                    b.ToTable("tbl_Tokens");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Advantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disadvantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Rating")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Categories");

                    b.HasData(
                        new
                        {
                            Id = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2201),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            IsDelete = false,
                            Name = "Комп'ютери та ноутбуки"
                        },
                        new
                        {
                            Id = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2253),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            IsDelete = false,
                            Name = "Смартфони"
                        },
                        new
                        {
                            Id = "7AiyxaN3ZW7",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2257),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            IsDelete = false,
                            Name = "Побутова техніка"
                        },
                        new
                        {
                            Id = "tiwSonslVbI",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2260),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            IsDelete = false,
                            Name = "Дача, сад, город"
                        },
                        new
                        {
                            Id = "1whCwz0g4zO",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2263),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            IsDelete = false,
                            Name = "Спорт і захоплення"
                        },
                        new
                        {
                            Id = "2PXjejePpEt",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2268),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            IsDelete = false,
                            Name = "Офіс, школа, книги"
                        },
                        new
                        {
                            Id = "D9NNoz46Su8",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2271),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description test",
                            IsDelete = false,
                            Name = "test"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("Dicount")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductEntity");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = "h6tpdEqfG_B",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2377),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "test",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "ПК Х123434",
                            Price = 436765,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "qG_CoA14SMQ",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2385),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ми представляємо вам найпотужнішу, саму оснащену, ударотривкий та найефективнішу версію смартфона 2021 року від румунської компанії iHunt .",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "iHunt Titan P13000 PRO 2021",
                            Price = 13940,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "lMrOZVn-Cc5",
                            CategoryId = "7AiyxaN3ZW7",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2390),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Холодильники з системою NeoFrost ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "BEKO CNA295K20XP",
                            Price = 10999,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "FCMXmUKK6Qa",
                            CategoryId = "tiwSonslVbI",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2394),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ланцюгова пила Bosch UniversalChain ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Bosch UniversalChain 40",
                            Price = 3958,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "XeLFqEhQNHH",
                            CategoryId = "1whCwz0g4zO",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2398),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Велосипед Champion Spark 29 ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Champion Spark 29 19.5 Black-neon yellow-white",
                            Price = 5460,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "N0ciV_Uvvb5",
                            CategoryId = "2PXjejePpEt",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Utc).AddTicks(2426),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ВНабір паперу офісного Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла",
                            Price = 1199,
                            ShortDescription = "figna"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Adresses", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("tbl_Users", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Laptop", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<string>("GraphicCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RAM")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = "lATuB2tGSW_",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2698),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 7.0
                        },
                        new
                        {
                            Id = "8fb8bzCLYdL",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2701),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer22222 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "Intel Core i5",
                            RAM = 11.0
                        },
                        new
                        {
                            Id = "i_HvTTIvl3M",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2704),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer333333 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 10.0
                        },
                        new
                        {
                            Id = "ncHPj29LZJE",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2706),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer44444444444 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "AMD Ryzen 7",
                            RAM = 12.0
                        },
                        new
                        {
                            Id = "dU2YoNBYJoc",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2708),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "77W1L7Mqd15",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2710),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "CbdPjvYaItw",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2712),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук HP Pavilion 15-cs3006ur Natural Silver",
                            Price = 23999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / Intel Core i5-1135G7 (2.4 - 4.2 ГГц) / RAM 8 ГБ / SSD 256 ГБ / Intel Iris Xe Graphics / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 1.75 кг / сріблястий",
                            GraphicCard = "Intel Iris Xe Graphics",
                            Processor = "Intel Core i5",
                            RAM = 16.0
                        },
                        new
                        {
                            Id = "y5jgwGAQwcG",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2714),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Lenovo IdeaPad 5 Pro 16ACH6",
                            Price = 29999,
                            ShortDescription = "Екран 16\" IPS (2560x1600) WQXGA, матовий / AMD Ryzen 7 5800H (3.2 - 4.4 ГГц) / RAM 16 ГБ / SSD 512 ГБ / NVIDIA GeForce RTX 3050, 4 ГБ / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 2.2 кг / сірий",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 2.0
                        },
                        new
                        {
                            Id = "NgTcBxSsDZl",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2716),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 8 ГБ / SSD 128 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 3.0
                        },
                        new
                        {
                            Id = "Ohb83MkHkGK",
                            CategoryId = "wKnjSPmIfFR",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2718),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i5",
                            RAM = 1.0
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Telephone", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("int");

                    b.Property<double>("DisplayDiagonal")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Telephone");

                    b.HasData(
                        new
                        {
                            Id = "m9WOBXsv1MJ",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2743),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple iPhone 14 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3100,
                            DisplayDiagonal = 6.4000000000000004
                        },
                        new
                        {
                            Id = "R0v7mQzX0U3",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2745),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i111",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4100,
                            DisplayDiagonal = 5.5999999999999996
                        },
                        new
                        {
                            Id = "2GDpnyxwoDW",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2747),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i222",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3600,
                            DisplayDiagonal = 5.5
                        },
                        new
                        {
                            Id = "T8g7Hz8C6am",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2749),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i333313",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3900,
                            DisplayDiagonal = 5.2000000000000002
                        },
                        new
                        {
                            Id = "sWE7aM2sQ_h",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2751),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мо4444444 4414 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4800,
                            DisplayDiagonal = 8.4000000000000004
                        },
                        new
                        {
                            Id = "Y6qU3aSTnkc",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2753),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "М55555555 Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4900,
                            DisplayDiagonal = 6.2999999999999998
                        },
                        new
                        {
                            Id = "wj_sdXsL58A",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2755),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний 66666666B Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4200,
                            DisplayDiagonal = 5.0999999999999996
                        },
                        new
                        {
                            Id = "ZOuWZpSFjKt",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2757),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобіл77777777 28GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4600,
                            DisplayDiagonal = 4.9000000000000004
                        },
                        new
                        {
                            Id = "mEPp7azSjw3",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2759),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Google Pixel 7",
                            Price = 32999,
                            ShortDescription = "Екран (6.2\", OLED, 2400x1080) / Qualcomm Snapdragon 778G / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / eSIM / Android 12",
                            BatteryCapacity = 4500,
                            DisplayDiagonal = 6.2000000000000002
                        },
                        new
                        {
                            Id = "WwrSMoiFbQk",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2761),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Sony Xperia 1 IV",
                            Price = 74999,
                            ShortDescription = "Екран (6.5\", OLED, 3840x1644) / Qualcomm Snapdragon 888 / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 10 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.5
                        },
                        new
                        {
                            Id = "QLH9Sj-q1My",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2763),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Xiaomi Mi 12",
                            Price = 39999,
                            ShortDescription = "Екран (6.81\", OLED, 3200x1440) / Qualcomm Snapdragon 8 Gen 1 / основна квадро-камера: 50 Мп + 12 Мп + 8 Мп + 2 Мп, фронтальна камера: 32 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Dual SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.8099999999999996
                        },
                        new
                        {
                            Id = "27RFgJUYSdW",
                            CategoryId = "T0sZGYZoMx0",
                            DateCreated = new DateTime(2023, 8, 1, 17, 6, 34, 945, DateTimeKind.Local).AddTicks(2765),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Samsung Galaxy S22",
                            Price = 45999,
                            ShortDescription = "Екран (6.1\", Dynamic AMOLED 2X, 1080x2400) / Samsung Exynos 2200 / основна квадро-камера: 50 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 10 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 4000,
                            DisplayDiagonal = 6.0999999999999996
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("FilterNames")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.FilterName", "FilterName")
                        .WithMany("Values")
                        .HasForeignKey("FilterNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilterName");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "CategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("SmartUserId");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Navigation("FilterNames");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Comments");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
