// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBuyApi.DataBase;

#nullable disable

namespace SmartBuyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230911113447_cart")]
    partial class cart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Metric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_FilterNames");

                    b.HasData(
                        new
                        {
                            Id = "3iG_LM_h0nx",
                            CategoryId = "rlCbxfOimxf",
                            Name = "GraphicCard",
                            PublicName = "Дискретна відеокарта"
                        },
                        new
                        {
                            Id = "a9KOQioORVn",
                            CategoryId = "rlCbxfOimxf",
                            Name = "Processor",
                            PublicName = "Процесор"
                        },
                        new
                        {
                            Id = "DLVkSB4M3_B",
                            CategoryId = "rlCbxfOimxf",
                            Metric = "ГБ",
                            Name = "RAM",
                            PublicName = "Обсяг оперативної пам'яті"
                        },
                        new
                        {
                            Id = "eJrCKtjDVr3",
                            CategoryId = "EnDKUD--DDw",
                            Metric = "мА·год",
                            Name = "BatteryCapacity",
                            PublicName = "Ємність акумулятора"
                        },
                        new
                        {
                            Id = "YJZiYQEbE5n",
                            CategoryId = "EnDKUD--DDw",
                            Metric = "\"",
                            Name = "DisplayDiagonal",
                            PublicName = "Діагональ екрана"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilterNameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("PublicValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilterNameId");

                    b.ToTable("tbl_FilterValues");

                    b.HasData(
                        new
                        {
                            Id = "qv_h0VleFuo",
                            FilterNameId = "3iG_LM_h0nx",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3070",
                            StringValue = "RTX 3070"
                        },
                        new
                        {
                            Id = "GOiB70U5J90",
                            FilterNameId = "3iG_LM_h0nx",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3060",
                            StringValue = "RTX 3060"
                        },
                        new
                        {
                            Id = "7qZnE8Mg-oZ",
                            FilterNameId = "3iG_LM_h0nx",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3050",
                            StringValue = "RTX 3050"
                        },
                        new
                        {
                            Id = "oqaxcgB4QSL",
                            FilterNameId = "a9KOQioORVn",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "AMD Ryzen 7",
                            StringValue = "AMD Ryzen 7"
                        },
                        new
                        {
                            Id = "LklOA26BTyD",
                            FilterNameId = "a9KOQioORVn",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i7",
                            StringValue = "Intel Core i7"
                        },
                        new
                        {
                            Id = "evQeHNhRKfc",
                            FilterNameId = "a9KOQioORVn",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i5",
                            StringValue = "Intel Core i5"
                        },
                        new
                        {
                            Id = "de20fQwSREw",
                            FilterNameId = "DLVkSB4M3_B",
                            MaxValue = 3.0,
                            MinValue = 0.20000000000000001,
                            PublicValue = "3 ГБ і менше"
                        },
                        new
                        {
                            Id = "VNa9GHjEY5S",
                            FilterNameId = "DLVkSB4M3_B",
                            MaxValue = 4.0,
                            MinValue = 4.0,
                            PublicValue = "4 ГБ"
                        },
                        new
                        {
                            Id = "K2lqPIgmadm",
                            FilterNameId = "DLVkSB4M3_B",
                            MaxValue = 8.0,
                            MinValue = 6.0,
                            PublicValue = "6 - 8 ГБ"
                        },
                        new
                        {
                            Id = "bueQnEQCdbF",
                            FilterNameId = "DLVkSB4M3_B",
                            MaxValue = 12.0,
                            MinValue = 10.0,
                            PublicValue = "10 - 12 ГБ"
                        },
                        new
                        {
                            Id = "pNtmsLMHjLk",
                            FilterNameId = "DLVkSB4M3_B",
                            MaxValue = 24.0,
                            MinValue = 16.0,
                            PublicValue = "16 - 24 ГБ"
                        },
                        new
                        {
                            Id = "2T9AByl9OsY",
                            FilterNameId = "eJrCKtjDVr3",
                            MaxValue = 3999.0,
                            MinValue = 3000.0,
                            PublicValue = "3000 - 3999 мА*год "
                        },
                        new
                        {
                            Id = "j2mFohAX3qY",
                            FilterNameId = "eJrCKtjDVr3",
                            MaxValue = 4999.0,
                            MinValue = 4000.0,
                            PublicValue = "4000 - 4999 мА*год "
                        },
                        new
                        {
                            Id = "Qasj8xrPgm5",
                            FilterNameId = "YJZiYQEbE5n",
                            MaxValue = 5.0,
                            MinValue = 4.5999999999999996,
                            PublicValue = "4.6\" - 5\""
                        },
                        new
                        {
                            Id = "iE1lE6S1lSK",
                            FilterNameId = "YJZiYQEbE5n",
                            MaxValue = 5.5,
                            MinValue = 5.0099999999999998,
                            PublicValue = "5.01\" - 5.5\""
                        },
                        new
                        {
                            Id = "wCXObDLahXB",
                            FilterNameId = "YJZiYQEbE5n",
                            MaxValue = 6.0,
                            MinValue = 5.5,
                            PublicValue = "5.5\" - 6\""
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_GlobalCategories");

                    b.HasData(
                        new
                        {
                            Id = "1JegB5Au-fY",
                            Name = "Смартфони та планшети"
                        },
                        new
                        {
                            Id = "ldXL58W6Omk",
                            Name = "Комп’ютери та ноутбуки"
                        },
                        new
                        {
                            Id = "KAN4V6vX-Sz",
                            Name = "Фото та відео"
                        },
                        new
                        {
                            Id = "aMjKdO9YBRK",
                            Name = "Аудіо"
                        },
                        new
                        {
                            Id = "qStHAyFX8wZ",
                            Name = "Мультимедіа"
                        },
                        new
                        {
                            Id = "o1u-GOvZKyR",
                            Name = "Ігрова техніка"
                        },
                        new
                        {
                            Id = "sr5c_rppUYW",
                            Name = "Побутова техніка"
                        },
                        new
                        {
                            Id = "6dXRub-fheD",
                            Name = "Електронні гаджети"
                        },
                        new
                        {
                            Id = "bHHSXzKC1tu",
                            Name = "Електро-інструменти"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GlobalCategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique()
                        .HasFilter("[CategoryId] IS NOT NULL");

                    b.HasIndex("GlobalCategoryId")
                        .IsUnique()
                        .HasFilter("[GlobalCategoryId] IS NOT NULL");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = "DgTMtNMCp3q",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "Sz5C1kWnIgU"
                        },
                        new
                        {
                            Id = "M3hNs4yZOHr",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "Sz5C1kWnIgU"
                        },
                        new
                        {
                            Id = "FsoxT9dA7JC",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "Sz5C1kWnIgU"
                        },
                        new
                        {
                            Id = "BI4mHMIvpte",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "51gkOL36kI-"
                        },
                        new
                        {
                            Id = "75kVmm32xk9",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "51gkOL36kI-"
                        },
                        new
                        {
                            Id = "ssWEKPfne8g",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "51gkOL36kI-"
                        },
                        new
                        {
                            Id = "s5fZWLoKO7S",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "1QFg0DuM4tp"
                        },
                        new
                        {
                            Id = "M6rTRpj_CzJ",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "1QFg0DuM4tp"
                        },
                        new
                        {
                            Id = "LuGvxcyGLmx",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "1QFg0DuM4tp"
                        },
                        new
                        {
                            Id = "Y7vCTn0-Lpc",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "MqATwx9ixm1"
                        },
                        new
                        {
                            Id = "kYnLCuU-ZPU",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "MqATwx9ixm1"
                        },
                        new
                        {
                            Id = "_yr9OzBSAyI",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "MqATwx9ixm1"
                        },
                        new
                        {
                            Id = "pF8TjYwD3CA",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "NLGDd--V_h2"
                        },
                        new
                        {
                            Id = "OGBy8DAa5NN",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "NLGDd--V_h2"
                        },
                        new
                        {
                            Id = "_AFUrP1UXmq",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "NLGDd--V_h2"
                        },
                        new
                        {
                            Id = "87EOAKuevdq",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "OcWrbSZLVhI"
                        },
                        new
                        {
                            Id = "L-s8mBhBjFm",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "OcWrbSZLVhI"
                        },
                        new
                        {
                            Id = "bd6c_LLR6Ct",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "OcWrbSZLVhI"
                        },
                        new
                        {
                            Id = "LJa0-80JtpH",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "bA3gr22xBnY"
                        },
                        new
                        {
                            Id = "snXWoGJpz7m",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "bA3gr22xBnY"
                        },
                        new
                        {
                            Id = "1W3C5zrakHd",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "bA3gr22xBnY"
                        },
                        new
                        {
                            Id = "sRywdkwy6fq",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "3L6kQMzUed6"
                        },
                        new
                        {
                            Id = "0yxPoSTQZ9C",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "3L6kQMzUed6"
                        },
                        new
                        {
                            Id = "j898esSxJXa",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "3L6kQMzUed6"
                        },
                        new
                        {
                            Id = "IZmoes1Bevn",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "B4ef_hPoAZd"
                        },
                        new
                        {
                            Id = "BF_VmWzEAyc",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "B4ef_hPoAZd"
                        },
                        new
                        {
                            Id = "dtWrC47MEI2",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "B4ef_hPoAZd"
                        },
                        new
                        {
                            Id = "p2Xeszpl_fp",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "3UxuGnnHlIu"
                        },
                        new
                        {
                            Id = "79zmA_K9eUT",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "3UxuGnnHlIu"
                        },
                        new
                        {
                            Id = "njG--lPUvDA",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "3UxuGnnHlIu"
                        },
                        new
                        {
                            Id = "X2AMYFO3fzc",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "zc78GMhVxs5"
                        },
                        new
                        {
                            Id = "un-nVZQhqAP",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "zc78GMhVxs5"
                        },
                        new
                        {
                            Id = "f028cwAgs6R",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "zc78GMhVxs5"
                        },
                        new
                        {
                            Id = "7KgSl5kCFkd",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "aKwqGBZLXNA"
                        },
                        new
                        {
                            Id = "_cvFEF7540f",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "aKwqGBZLXNA"
                        },
                        new
                        {
                            Id = "TIE82aSlg85",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "aKwqGBZLXNA"
                        },
                        new
                        {
                            Id = "M9AruxrQ2XL",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "Iwl-MnDxAzC"
                        },
                        new
                        {
                            Id = "gjmH3GooWof",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "Iwl-MnDxAzC"
                        },
                        new
                        {
                            Id = "fBq9vJ5HiXL",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "Iwl-MnDxAzC"
                        },
                        new
                        {
                            Id = "5QcUGAawzI0",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "lT14V2S-Y5i"
                        },
                        new
                        {
                            Id = "44ZG4jV3ThV",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "lT14V2S-Y5i"
                        },
                        new
                        {
                            Id = "Sm_c8cRsFH1",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "lT14V2S-Y5i"
                        },
                        new
                        {
                            Id = "bInjMsy9fxk",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "hCK3ReredZ8"
                        },
                        new
                        {
                            Id = "BhebOQBGJ24",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "hCK3ReredZ8"
                        },
                        new
                        {
                            Id = "R76ITeawW0b",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "hCK3ReredZ8"
                        },
                        new
                        {
                            Id = "FvRO_GfyU_V",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "D5gbCXTfyLT"
                        },
                        new
                        {
                            Id = "CqcwpxJtNvN",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "D5gbCXTfyLT"
                        },
                        new
                        {
                            Id = "ZBN8dcKu9sv",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "D5gbCXTfyLT"
                        },
                        new
                        {
                            Id = "rQN0U0hPn_a",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "L3u_oaaLAmQ"
                        },
                        new
                        {
                            Id = "OzwBY7fDgZF",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "L3u_oaaLAmQ"
                        },
                        new
                        {
                            Id = "7ELLGaRxBpp",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "L3u_oaaLAmQ"
                        },
                        new
                        {
                            Id = "y9kt3awnngO",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "TztEFnBXb-j"
                        },
                        new
                        {
                            Id = "fLOYH02fEZD",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "TztEFnBXb-j"
                        },
                        new
                        {
                            Id = "4kBd9nfcZ8u",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "TztEFnBXb-j"
                        },
                        new
                        {
                            Id = "sBlU5bPRRDf",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "mhkfEpBBWpF"
                        },
                        new
                        {
                            Id = "JlE3uH_p0VT",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "mhkfEpBBWpF"
                        },
                        new
                        {
                            Id = "0ulejF6L1OD",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "mhkfEpBBWpF"
                        },
                        new
                        {
                            Id = "UH4WVpvXcy3",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "zSHHW9CUEQA"
                        },
                        new
                        {
                            Id = "nbQyfVdLnR5",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "zSHHW9CUEQA"
                        },
                        new
                        {
                            Id = "rlzbVcJ3y6r",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "zSHHW9CUEQA"
                        },
                        new
                        {
                            Id = "IWhWP5RYhwy",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "cfsb0_yfU-s"
                        },
                        new
                        {
                            Id = "E3gnRP03RlO",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "cfsb0_yfU-s"
                        },
                        new
                        {
                            Id = "l-QFRXgCdHi",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "cfsb0_yfU-s"
                        },
                        new
                        {
                            Id = "tkExfuaZeHi",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "cW8mEdX69oO"
                        },
                        new
                        {
                            Id = "EKVAASVqwQg",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "cW8mEdX69oO"
                        },
                        new
                        {
                            Id = "QIqaFk9KyHu",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "cW8mEdX69oO"
                        },
                        new
                        {
                            Id = "wgWA9d1jmyr",
                            CategoryId = "rlCbxfOimxf",
                            GlobalCategoryId = "ldXL58W6Omk",
                            Name = "laptops.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "1qLHSrWe_ot",
                            GlobalCategoryId = "1JegB5Au-fY",
                            Name = "tablets.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "JuFaQapTYEj",
                            CategoryId = "EnDKUD--DDw",
                            Name = "telephones.webp",
                            Priority = 1
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmartUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SmartUserId");

                    b.ToTable("tbl_Tokens");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Advantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disadvantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Rating")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.Cart", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_cart", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CartItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("tbl_cartItem", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("GlobalCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GlobalCategoryId");

                    b.ToTable("tbl_Categories");

                    b.HasData(
                        new
                        {
                            Id = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(7970),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "ldXL58W6Omk",
                            IsDelete = false,
                            Name = "Ноутбуки, ультрабуки та мінібуки"
                        },
                        new
                        {
                            Id = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8075),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "1JegB5Au-fY",
                            IsDelete = false,
                            Name = "Смартфони"
                        },
                        new
                        {
                            Id = "q9vxN1lqU-U",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8090),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "1JegB5Au-fY",
                            IsDelete = false,
                            Name = "Планшети"
                        },
                        new
                        {
                            Id = "EZqnScP4oOP",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8103),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "1JegB5Au-fY",
                            IsDelete = false,
                            Name = "Аксесуари для смартфонів і планшетів"
                        },
                        new
                        {
                            Id = "RXYxs8ws8U1",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8115),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "ldXL58W6Omk",
                            IsDelete = false,
                            Name = "настільні ПК"
                        },
                        new
                        {
                            Id = "Stc-d-qSMoI",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8134),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "ldXL58W6Omk",
                            IsDelete = false,
                            Name = "монітори"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("Dicount")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserLikeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserLikeId");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductEntity");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = "JehDiTTOqS9",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8296),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "test",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "ПК Х123434",
                            Price = 436765,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "AOg0gOR_nFF",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8349),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ми представляємо вам найпотужнішу, саму оснащену, ударотривкий та найефективнішу версію смартфона 2021 року від румунської компанії iHunt .",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "iHunt Titan P13000 PRO 2021",
                            Price = 13940,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "5k8VoF-dG7n",
                            CategoryId = "q9vxN1lqU-U",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8365),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Холодильники з системою NeoFrost ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "BEKO CNA295K20XP",
                            Price = 10999,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "pUfpDAblV_R",
                            CategoryId = "EZqnScP4oOP",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8380),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ланцюгова пила Bosch UniversalChain ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Bosch UniversalChain 40",
                            Price = 3958,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "DCjMzJ-fOUh",
                            CategoryId = "RXYxs8ws8U1",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8396),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Велосипед Champion Spark 29 ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Champion Spark 29 19.5 Black-neon yellow-white",
                            Price = 5460,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "vkczFrGII6o",
                            CategoryId = "Stc-d-qSMoI",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Utc).AddTicks(8408),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ВНабір паперу офісного Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла",
                            Price = 1199,
                            ShortDescription = "figna"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Adresses", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("tbl_Users", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Laptop", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<string>("GraphicCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RAM")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = "Sz5C1kWnIgU",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9564),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 7.0
                        },
                        new
                        {
                            Id = "51gkOL36kI-",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9582),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer22222 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "Intel Core i5",
                            RAM = 11.0
                        },
                        new
                        {
                            Id = "1QFg0DuM4tp",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9590),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer333333 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 10.0
                        },
                        new
                        {
                            Id = "MqATwx9ixm1",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9597),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer44444444444 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "AMD Ryzen 7",
                            RAM = 12.0
                        },
                        new
                        {
                            Id = "NLGDd--V_h2",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9608),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "OcWrbSZLVhI",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9684),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "bA3gr22xBnY",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9693),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук HP Pavilion 15-cs3006ur Natural Silver",
                            Price = 23999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / Intel Core i5-1135G7 (2.4 - 4.2 ГГц) / RAM 8 ГБ / SSD 256 ГБ / Intel Iris Xe Graphics / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 1.75 кг / сріблястий",
                            GraphicCard = "Intel Iris Xe Graphics",
                            Processor = "Intel Core i5",
                            RAM = 16.0
                        },
                        new
                        {
                            Id = "3L6kQMzUed6",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9700),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Lenovo IdeaPad 5 Pro 16ACH6",
                            Price = 29999,
                            ShortDescription = "Екран 16\" IPS (2560x1600) WQXGA, матовий / AMD Ryzen 7 5800H (3.2 - 4.4 ГГц) / RAM 16 ГБ / SSD 512 ГБ / NVIDIA GeForce RTX 3050, 4 ГБ / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 2.2 кг / сірий",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 2.0
                        },
                        new
                        {
                            Id = "B4ef_hPoAZd",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9709),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 8 ГБ / SSD 128 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 3.0
                        },
                        new
                        {
                            Id = "3UxuGnnHlIu",
                            CategoryId = "rlCbxfOimxf",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9716),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i5",
                            RAM = 1.0
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Telephone", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("int");

                    b.Property<double>("DisplayDiagonal")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Telephone");

                    b.HasData(
                        new
                        {
                            Id = "zc78GMhVxs5",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9795),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple iPhone 14 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3100,
                            DisplayDiagonal = 6.4000000000000004
                        },
                        new
                        {
                            Id = "aKwqGBZLXNA",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9803),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i111",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4100,
                            DisplayDiagonal = 5.5999999999999996
                        },
                        new
                        {
                            Id = "Iwl-MnDxAzC",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9812),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i222",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3600,
                            DisplayDiagonal = 5.5
                        },
                        new
                        {
                            Id = "lT14V2S-Y5i",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9821),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i333313",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3900,
                            DisplayDiagonal = 5.2000000000000002
                        },
                        new
                        {
                            Id = "hCK3ReredZ8",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9827),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мо4444444 4414 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4800,
                            DisplayDiagonal = 8.4000000000000004
                        },
                        new
                        {
                            Id = "D5gbCXTfyLT",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9835),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "М55555555 Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4900,
                            DisplayDiagonal = 6.2999999999999998
                        },
                        new
                        {
                            Id = "L3u_oaaLAmQ",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9845),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний 66666666B Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4200,
                            DisplayDiagonal = 5.0999999999999996
                        },
                        new
                        {
                            Id = "TztEFnBXb-j",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9853),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобіл77777777 28GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4600,
                            DisplayDiagonal = 4.9000000000000004
                        },
                        new
                        {
                            Id = "mhkfEpBBWpF",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9861),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Google Pixel 7",
                            Price = 32999,
                            ShortDescription = "Екран (6.2\", OLED, 2400x1080) / Qualcomm Snapdragon 778G / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / eSIM / Android 12",
                            BatteryCapacity = 4500,
                            DisplayDiagonal = 6.2000000000000002
                        },
                        new
                        {
                            Id = "zSHHW9CUEQA",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9869),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Sony Xperia 1 IV",
                            Price = 74999,
                            ShortDescription = "Екран (6.5\", OLED, 3840x1644) / Qualcomm Snapdragon 888 / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 10 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.5
                        },
                        new
                        {
                            Id = "cfsb0_yfU-s",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9879),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Xiaomi Mi 12",
                            Price = 39999,
                            ShortDescription = "Екран (6.81\", OLED, 3200x1440) / Qualcomm Snapdragon 8 Gen 1 / основна квадро-камера: 50 Мп + 12 Мп + 8 Мп + 2 Мп, фронтальна камера: 32 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Dual SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.8099999999999996
                        },
                        new
                        {
                            Id = "cW8mEdX69oO",
                            CategoryId = "EnDKUD--DDw",
                            DateCreated = new DateTime(2023, 9, 11, 13, 34, 47, 5, DateTimeKind.Local).AddTicks(9886),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Samsung Galaxy S22",
                            Price = 45999,
                            ShortDescription = "Екран (6.1\", Dynamic AMOLED 2X, 1080x2400) / Samsung Exynos 2200 / основна квадро-камера: 50 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 10 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 4000,
                            DisplayDiagonal = 6.0999999999999996
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("FilterNames")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.FilterName", "FilterName")
                        .WithMany("Values")
                        .HasForeignKey("FilterNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilterName");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "CategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "GlobalCategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Category");

                    b.Navigation("GlobalCategory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("SmartUserId");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CartItem", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithMany("Categories")
                        .HasForeignKey("GlobalCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlobalCategory");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "UserLike")
                        .WithMany("LikedProducts")
                        .HasForeignKey("UserLikeId");

                    b.Navigation("Category");

                    b.Navigation("UserLike");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Image")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Navigation("FilterNames");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Comments");

                    b.Navigation("LikedProducts");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
