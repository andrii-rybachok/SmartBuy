// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBuyApi.DataBase;

#nullable disable

namespace SmartBuyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230911104845_cart2")]
    partial class cart2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Metric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_FilterNames");

                    b.HasData(
                        new
                        {
                            Id = "jhSAVS6Wl1l",
                            CategoryId = "i3XZZ3ZESn0",
                            Name = "GraphicCard",
                            PublicName = "Дискретна відеокарта"
                        },
                        new
                        {
                            Id = "qSIVwgKGZpU",
                            CategoryId = "i3XZZ3ZESn0",
                            Name = "Processor",
                            PublicName = "Процесор"
                        },
                        new
                        {
                            Id = "w3bsdB-kjZV",
                            CategoryId = "i3XZZ3ZESn0",
                            Metric = "ГБ",
                            Name = "RAM",
                            PublicName = "Обсяг оперативної пам'яті"
                        },
                        new
                        {
                            Id = "yMq7W8Lz0aO",
                            CategoryId = "hogD4A8G5Et",
                            Metric = "мА·год",
                            Name = "BatteryCapacity",
                            PublicName = "Ємність акумулятора"
                        },
                        new
                        {
                            Id = "ImGNZuAR9uO",
                            CategoryId = "hogD4A8G5Et",
                            Metric = "\"",
                            Name = "DisplayDiagonal",
                            PublicName = "Діагональ екрана"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilterNameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("PublicValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilterNameId");

                    b.ToTable("tbl_FilterValues");

                    b.HasData(
                        new
                        {
                            Id = "uN2LSgfN5qU",
                            FilterNameId = "jhSAVS6Wl1l",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3070",
                            StringValue = "RTX 3070"
                        },
                        new
                        {
                            Id = "RJVIcuRLyKl",
                            FilterNameId = "jhSAVS6Wl1l",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3060",
                            StringValue = "RTX 3060"
                        },
                        new
                        {
                            Id = "GbTgp_Ip5jg",
                            FilterNameId = "jhSAVS6Wl1l",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3050",
                            StringValue = "RTX 3050"
                        },
                        new
                        {
                            Id = "cPBdFmwxTsa",
                            FilterNameId = "qSIVwgKGZpU",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "AMD Ryzen 7",
                            StringValue = "AMD Ryzen 7"
                        },
                        new
                        {
                            Id = "AemD7hPfjWR",
                            FilterNameId = "qSIVwgKGZpU",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i7",
                            StringValue = "Intel Core i7"
                        },
                        new
                        {
                            Id = "mb66CEsfYcz",
                            FilterNameId = "qSIVwgKGZpU",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i5",
                            StringValue = "Intel Core i5"
                        },
                        new
                        {
                            Id = "CnMkPuH6_yJ",
                            FilterNameId = "w3bsdB-kjZV",
                            MaxValue = 3.0,
                            MinValue = 0.20000000000000001,
                            PublicValue = "3 ГБ і менше"
                        },
                        new
                        {
                            Id = "ZFxw2F08XnT",
                            FilterNameId = "w3bsdB-kjZV",
                            MaxValue = 4.0,
                            MinValue = 4.0,
                            PublicValue = "4 ГБ"
                        },
                        new
                        {
                            Id = "JFWByZdSNqM",
                            FilterNameId = "w3bsdB-kjZV",
                            MaxValue = 8.0,
                            MinValue = 6.0,
                            PublicValue = "6 - 8 ГБ"
                        },
                        new
                        {
                            Id = "oekcaytGpPG",
                            FilterNameId = "w3bsdB-kjZV",
                            MaxValue = 12.0,
                            MinValue = 10.0,
                            PublicValue = "10 - 12 ГБ"
                        },
                        new
                        {
                            Id = "5y_p-shqD7-",
                            FilterNameId = "w3bsdB-kjZV",
                            MaxValue = 24.0,
                            MinValue = 16.0,
                            PublicValue = "16 - 24 ГБ"
                        },
                        new
                        {
                            Id = "utsRdB877G8",
                            FilterNameId = "yMq7W8Lz0aO",
                            MaxValue = 3999.0,
                            MinValue = 3000.0,
                            PublicValue = "3000 - 3999 мА*год "
                        },
                        new
                        {
                            Id = "bjeuzOP0qp5",
                            FilterNameId = "yMq7W8Lz0aO",
                            MaxValue = 4999.0,
                            MinValue = 4000.0,
                            PublicValue = "4000 - 4999 мА*год "
                        },
                        new
                        {
                            Id = "F_6BE8xesqE",
                            FilterNameId = "ImGNZuAR9uO",
                            MaxValue = 5.0,
                            MinValue = 4.5999999999999996,
                            PublicValue = "4.6\" - 5\""
                        },
                        new
                        {
                            Id = "LbZmwyxSvva",
                            FilterNameId = "ImGNZuAR9uO",
                            MaxValue = 5.5,
                            MinValue = 5.0099999999999998,
                            PublicValue = "5.01\" - 5.5\""
                        },
                        new
                        {
                            Id = "AXaMITO9S3H",
                            FilterNameId = "ImGNZuAR9uO",
                            MaxValue = 6.0,
                            MinValue = 5.5,
                            PublicValue = "5.5\" - 6\""
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_GlobalCategories");

                    b.HasData(
                        new
                        {
                            Id = "iCPjOqtzmri",
                            Name = "Смартфони та планшети"
                        },
                        new
                        {
                            Id = "_JPsqpydCqB",
                            Name = "Комп’ютери та ноутбуки"
                        },
                        new
                        {
                            Id = "n9GSeTG8CJo",
                            Name = "Фото та відео"
                        },
                        new
                        {
                            Id = "B31guzcwnwP",
                            Name = "Аудіо"
                        },
                        new
                        {
                            Id = "KZdYr6e3t9K",
                            Name = "Мультимедіа"
                        },
                        new
                        {
                            Id = "Ce-6WRNE3nj",
                            Name = "Ігрова техніка"
                        },
                        new
                        {
                            Id = "ivE17DTLjX0",
                            Name = "Побутова техніка"
                        },
                        new
                        {
                            Id = "le6DNS35oFZ",
                            Name = "Електронні гаджети"
                        },
                        new
                        {
                            Id = "sM3nnc3j3hG",
                            Name = "Електро-інструменти"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GlobalCategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique()
                        .HasFilter("[CategoryId] IS NOT NULL");

                    b.HasIndex("GlobalCategoryId")
                        .IsUnique()
                        .HasFilter("[GlobalCategoryId] IS NOT NULL");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = "Tfvd3kkQ9XE",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "Eg6Hejje-Ux"
                        },
                        new
                        {
                            Id = "7b-092dyWT-",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "Eg6Hejje-Ux"
                        },
                        new
                        {
                            Id = "5eblXu5J2d-",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "Eg6Hejje-Ux"
                        },
                        new
                        {
                            Id = "_aSQNaBJh6m",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "js0l-g8LLJ4"
                        },
                        new
                        {
                            Id = "FbxRwV2bYkU",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "js0l-g8LLJ4"
                        },
                        new
                        {
                            Id = "jetQxuvT7n6",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "js0l-g8LLJ4"
                        },
                        new
                        {
                            Id = "8SHTdoiOL4M",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "HXp3vfk70f3"
                        },
                        new
                        {
                            Id = "4jimalOiIcI",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "HXp3vfk70f3"
                        },
                        new
                        {
                            Id = "d7bj6_F8A9s",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "HXp3vfk70f3"
                        },
                        new
                        {
                            Id = "BLry7fUaHbF",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "0yIcPjlJasS"
                        },
                        new
                        {
                            Id = "fosaFz20iCN",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "0yIcPjlJasS"
                        },
                        new
                        {
                            Id = "FWNW9ETf1EL",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "0yIcPjlJasS"
                        },
                        new
                        {
                            Id = "nT7NcAPdEfR",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "dl4qY_Lzxp3"
                        },
                        new
                        {
                            Id = "SyIcxk8JjXo",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "dl4qY_Lzxp3"
                        },
                        new
                        {
                            Id = "OeEcyi4o3fM",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "dl4qY_Lzxp3"
                        },
                        new
                        {
                            Id = "keCkUF0djar",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "u5cgwtEN9QQ"
                        },
                        new
                        {
                            Id = "Yg_LP9KdsLc",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "u5cgwtEN9QQ"
                        },
                        new
                        {
                            Id = "0Co_hsnMmtJ",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "u5cgwtEN9QQ"
                        },
                        new
                        {
                            Id = "z9V--kBhmYo",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "TDQzhaIYU8R"
                        },
                        new
                        {
                            Id = "1DM_PBh9qab",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "TDQzhaIYU8R"
                        },
                        new
                        {
                            Id = "HUFfnJGBAQo",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "TDQzhaIYU8R"
                        },
                        new
                        {
                            Id = "B4ItQ6EvGu2",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "V3khPypouAu"
                        },
                        new
                        {
                            Id = "ITFpdADGzeQ",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "V3khPypouAu"
                        },
                        new
                        {
                            Id = "Fz1WdwhoyTT",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "V3khPypouAu"
                        },
                        new
                        {
                            Id = "cA6yg9cMGDp",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "5Or-XmsS9R4"
                        },
                        new
                        {
                            Id = "xAjfbnXfxBW",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "5Or-XmsS9R4"
                        },
                        new
                        {
                            Id = "4__szArp3Se",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "5Or-XmsS9R4"
                        },
                        new
                        {
                            Id = "BQG71nbUvye",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "KTWD7_r8LqQ"
                        },
                        new
                        {
                            Id = "9pI-_yEn0Fn",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "KTWD7_r8LqQ"
                        },
                        new
                        {
                            Id = "KBJGAyR_GwA",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "KTWD7_r8LqQ"
                        },
                        new
                        {
                            Id = "k9A_b6wNc59",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "F9r31IBkNCQ"
                        },
                        new
                        {
                            Id = "tDrdzMDVfyk",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "F9r31IBkNCQ"
                        },
                        new
                        {
                            Id = "o_sUqaImTVy",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "F9r31IBkNCQ"
                        },
                        new
                        {
                            Id = "MTw_jkGEckv",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "-wnFvt-OM3_"
                        },
                        new
                        {
                            Id = "cVXvKuIIDcM",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "-wnFvt-OM3_"
                        },
                        new
                        {
                            Id = "y6jndE9UZL2",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "-wnFvt-OM3_"
                        },
                        new
                        {
                            Id = "DThN8iAvShK",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "jRBbbn5xkhZ"
                        },
                        new
                        {
                            Id = "LRcyU5bfUyv",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "jRBbbn5xkhZ"
                        },
                        new
                        {
                            Id = "gjMgpBFn7DP",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "jRBbbn5xkhZ"
                        },
                        new
                        {
                            Id = "ZSnPjHf5giE",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "Aygccqr_6V1"
                        },
                        new
                        {
                            Id = "1C6qjjh80Qf",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "Aygccqr_6V1"
                        },
                        new
                        {
                            Id = "L22Mr9KoESm",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "Aygccqr_6V1"
                        },
                        new
                        {
                            Id = "SASXy_-YgMp",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "mgFZAehEX2z"
                        },
                        new
                        {
                            Id = "9uJrpkbi0AM",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "mgFZAehEX2z"
                        },
                        new
                        {
                            Id = "RzMYP-ML7pe",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "mgFZAehEX2z"
                        },
                        new
                        {
                            Id = "HmaFO4aZ7RN",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "cGc0ySfepOo"
                        },
                        new
                        {
                            Id = "TwaCxw0_-rZ",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "cGc0ySfepOo"
                        },
                        new
                        {
                            Id = "mFbrHbT8SSF",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "cGc0ySfepOo"
                        },
                        new
                        {
                            Id = "RVVMgW8b2dZ",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "EnnE2nHVFed"
                        },
                        new
                        {
                            Id = "oeO9ZXaRSCI",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "EnnE2nHVFed"
                        },
                        new
                        {
                            Id = "SidMcH-T2eg",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "EnnE2nHVFed"
                        },
                        new
                        {
                            Id = "53Hl1o7uUbP",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "ppDiSdHsOlP"
                        },
                        new
                        {
                            Id = "j5yIwJSUnKa",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "ppDiSdHsOlP"
                        },
                        new
                        {
                            Id = "SS1wEaL-c55",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "ppDiSdHsOlP"
                        },
                        new
                        {
                            Id = "Vo_WlV8m3QQ",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "IiexzL8HhXR"
                        },
                        new
                        {
                            Id = "_F9sr1whEnD",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "IiexzL8HhXR"
                        },
                        new
                        {
                            Id = "a_zLP3qyBNN",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "IiexzL8HhXR"
                        },
                        new
                        {
                            Id = "Tbd_RJQSO9F",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "AObpvxX4Y5U"
                        },
                        new
                        {
                            Id = "QBABNserI4A",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "AObpvxX4Y5U"
                        },
                        new
                        {
                            Id = "srfdyrCq2or",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "AObpvxX4Y5U"
                        },
                        new
                        {
                            Id = "rtSeP5GF8w2",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "YWoEHKy9_sD"
                        },
                        new
                        {
                            Id = "o1Nu5LsCQtY",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "YWoEHKy9_sD"
                        },
                        new
                        {
                            Id = "mJMB_-6oP6Q",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "YWoEHKy9_sD"
                        },
                        new
                        {
                            Id = "KLQnoiWEsmD",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "qIlS3h9uzFa"
                        },
                        new
                        {
                            Id = "hSsfYEHlinN",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "qIlS3h9uzFa"
                        },
                        new
                        {
                            Id = "Gjt2q_w0y9G",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "qIlS3h9uzFa"
                        },
                        new
                        {
                            Id = "-EP2emhFumJ",
                            CategoryId = "i3XZZ3ZESn0",
                            GlobalCategoryId = "_JPsqpydCqB",
                            Name = "laptops.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "x0WISY9Asuq",
                            GlobalCategoryId = "iCPjOqtzmri",
                            Name = "tablets.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "KqHQaGWiDOR",
                            CategoryId = "hogD4A8G5Et",
                            Name = "telephones.webp",
                            Priority = 1
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmartUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SmartUserId");

                    b.ToTable("tbl_Tokens");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Advantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disadvantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Rating")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("GlobalCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GlobalCategoryId");

                    b.ToTable("tbl_Categories");

                    b.HasData(
                        new
                        {
                            Id = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(646),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "_JPsqpydCqB",
                            IsDelete = false,
                            Name = "Ноутбуки, ультрабуки та мінібуки"
                        },
                        new
                        {
                            Id = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(708),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "iCPjOqtzmri",
                            IsDelete = false,
                            Name = "Смартфони"
                        },
                        new
                        {
                            Id = "29TQoXolT2I",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(715),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "iCPjOqtzmri",
                            IsDelete = false,
                            Name = "Планшети"
                        },
                        new
                        {
                            Id = "ldy6NhXsl_M",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(721),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "iCPjOqtzmri",
                            IsDelete = false,
                            Name = "Аксесуари для смартфонів і планшетів"
                        },
                        new
                        {
                            Id = "1YhjYCdHdws",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(726),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "_JPsqpydCqB",
                            IsDelete = false,
                            Name = "настільні ПК"
                        },
                        new
                        {
                            Id = "JbtBBQtRhud",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(732),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "_JPsqpydCqB",
                            IsDelete = false,
                            Name = "монітори"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("Dicount")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserLikeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserLikeId");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductEntity");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = "RR_WfUkRy4B",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(806),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "test",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "ПК Х123434",
                            Price = 436765,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "F8v_3nKzj70",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(894),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ми представляємо вам найпотужнішу, саму оснащену, ударотривкий та найефективнішу версію смартфона 2021 року від румунської компанії iHunt .",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "iHunt Titan P13000 PRO 2021",
                            Price = 13940,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "2JBnQsP5ErH",
                            CategoryId = "29TQoXolT2I",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(902),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Холодильники з системою NeoFrost ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "BEKO CNA295K20XP",
                            Price = 10999,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "W2UbGyxMt2a",
                            CategoryId = "ldy6NhXsl_M",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(908),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ланцюгова пила Bosch UniversalChain ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Bosch UniversalChain 40",
                            Price = 3958,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "DMMasPOH2KC",
                            CategoryId = "1YhjYCdHdws",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(914),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Велосипед Champion Spark 29 ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Champion Spark 29 19.5 Black-neon yellow-white",
                            Price = 5460,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "R9f0j2qIJRg",
                            CategoryId = "JbtBBQtRhud",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Utc).AddTicks(919),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ВНабір паперу офісного Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла",
                            Price = 1199,
                            ShortDescription = "figna"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Adresses", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("tbl_Users", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Laptop", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<string>("GraphicCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RAM")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = "Eg6Hejje-Ux",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1278),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 7.0
                        },
                        new
                        {
                            Id = "js0l-g8LLJ4",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1286),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer22222 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "Intel Core i5",
                            RAM = 11.0
                        },
                        new
                        {
                            Id = "HXp3vfk70f3",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1289),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer333333 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 10.0
                        },
                        new
                        {
                            Id = "0yIcPjlJasS",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1291),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer44444444444 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "AMD Ryzen 7",
                            RAM = 12.0
                        },
                        new
                        {
                            Id = "dl4qY_Lzxp3",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1295),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "u5cgwtEN9QQ",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1297),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "TDQzhaIYU8R",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1300),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук HP Pavilion 15-cs3006ur Natural Silver",
                            Price = 23999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / Intel Core i5-1135G7 (2.4 - 4.2 ГГц) / RAM 8 ГБ / SSD 256 ГБ / Intel Iris Xe Graphics / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 1.75 кг / сріблястий",
                            GraphicCard = "Intel Iris Xe Graphics",
                            Processor = "Intel Core i5",
                            RAM = 16.0
                        },
                        new
                        {
                            Id = "V3khPypouAu",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1302),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Lenovo IdeaPad 5 Pro 16ACH6",
                            Price = 29999,
                            ShortDescription = "Екран 16\" IPS (2560x1600) WQXGA, матовий / AMD Ryzen 7 5800H (3.2 - 4.4 ГГц) / RAM 16 ГБ / SSD 512 ГБ / NVIDIA GeForce RTX 3050, 4 ГБ / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 2.2 кг / сірий",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 2.0
                        },
                        new
                        {
                            Id = "5Or-XmsS9R4",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1306),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 8 ГБ / SSD 128 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 3.0
                        },
                        new
                        {
                            Id = "KTWD7_r8LqQ",
                            CategoryId = "i3XZZ3ZESn0",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1309),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i5",
                            RAM = 1.0
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Telephone", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("int");

                    b.Property<double>("DisplayDiagonal")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Telephone");

                    b.HasData(
                        new
                        {
                            Id = "F9r31IBkNCQ",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1348),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple iPhone 14 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3100,
                            DisplayDiagonal = 6.4000000000000004
                        },
                        new
                        {
                            Id = "-wnFvt-OM3_",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1353),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i111",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4100,
                            DisplayDiagonal = 5.5999999999999996
                        },
                        new
                        {
                            Id = "jRBbbn5xkhZ",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1355),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i222",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3600,
                            DisplayDiagonal = 5.5
                        },
                        new
                        {
                            Id = "Aygccqr_6V1",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1359),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i333313",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3900,
                            DisplayDiagonal = 5.2000000000000002
                        },
                        new
                        {
                            Id = "mgFZAehEX2z",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1361),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мо4444444 4414 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4800,
                            DisplayDiagonal = 8.4000000000000004
                        },
                        new
                        {
                            Id = "cGc0ySfepOo",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1364),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "М55555555 Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4900,
                            DisplayDiagonal = 6.2999999999999998
                        },
                        new
                        {
                            Id = "EnnE2nHVFed",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1367),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний 66666666B Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4200,
                            DisplayDiagonal = 5.0999999999999996
                        },
                        new
                        {
                            Id = "ppDiSdHsOlP",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1394),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобіл77777777 28GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4600,
                            DisplayDiagonal = 4.9000000000000004
                        },
                        new
                        {
                            Id = "IiexzL8HhXR",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1396),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Google Pixel 7",
                            Price = 32999,
                            ShortDescription = "Екран (6.2\", OLED, 2400x1080) / Qualcomm Snapdragon 778G / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / eSIM / Android 12",
                            BatteryCapacity = 4500,
                            DisplayDiagonal = 6.2000000000000002
                        },
                        new
                        {
                            Id = "AObpvxX4Y5U",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1399),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Sony Xperia 1 IV",
                            Price = 74999,
                            ShortDescription = "Екран (6.5\", OLED, 3840x1644) / Qualcomm Snapdragon 888 / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 10 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.5
                        },
                        new
                        {
                            Id = "YWoEHKy9_sD",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1403),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Xiaomi Mi 12",
                            Price = 39999,
                            ShortDescription = "Екран (6.81\", OLED, 3200x1440) / Qualcomm Snapdragon 8 Gen 1 / основна квадро-камера: 50 Мп + 12 Мп + 8 Мп + 2 Мп, фронтальна камера: 32 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Dual SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.8099999999999996
                        },
                        new
                        {
                            Id = "qIlS3h9uzFa",
                            CategoryId = "hogD4A8G5Et",
                            DateCreated = new DateTime(2023, 9, 11, 12, 48, 45, 380, DateTimeKind.Local).AddTicks(1405),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Samsung Galaxy S22",
                            Price = 45999,
                            ShortDescription = "Екран (6.1\", Dynamic AMOLED 2X, 1080x2400) / Samsung Exynos 2200 / основна квадро-камера: 50 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 10 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 4000,
                            DisplayDiagonal = 6.0999999999999996
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("FilterNames")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.FilterName", "FilterName")
                        .WithMany("Values")
                        .HasForeignKey("FilterNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilterName");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "CategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "GlobalCategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Category");

                    b.Navigation("GlobalCategory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("SmartUserId");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithMany("Categories")
                        .HasForeignKey("GlobalCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlobalCategory");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "UserLike")
                        .WithMany("LikedProducts")
                        .HasForeignKey("UserLikeId");

                    b.Navigation("Category");

                    b.Navigation("UserLike");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Image")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Navigation("FilterNames");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Comments");

                    b.Navigation("LikedProducts");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
