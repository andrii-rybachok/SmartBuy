// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBuyApi.DataBase;

#nullable disable

namespace SmartBuyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230911110514_cart3")]
    partial class cart3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Metric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_FilterNames");

                    b.HasData(
                        new
                        {
                            Id = "LAS_TqHl1uE",
                            CategoryId = "PNpFQMz7MXl",
                            Name = "GraphicCard",
                            PublicName = "Дискретна відеокарта"
                        },
                        new
                        {
                            Id = "RKG0WQQos5P",
                            CategoryId = "PNpFQMz7MXl",
                            Name = "Processor",
                            PublicName = "Процесор"
                        },
                        new
                        {
                            Id = "2VlKvuBkVkE",
                            CategoryId = "PNpFQMz7MXl",
                            Metric = "ГБ",
                            Name = "RAM",
                            PublicName = "Обсяг оперативної пам'яті"
                        },
                        new
                        {
                            Id = "LePYRRvwn-y",
                            CategoryId = "42qYJ6X-8mn",
                            Metric = "мА·год",
                            Name = "BatteryCapacity",
                            PublicName = "Ємність акумулятора"
                        },
                        new
                        {
                            Id = "uDNtsDhyl2s",
                            CategoryId = "42qYJ6X-8mn",
                            Metric = "\"",
                            Name = "DisplayDiagonal",
                            PublicName = "Діагональ екрана"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilterNameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("PublicValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilterNameId");

                    b.ToTable("tbl_FilterValues");

                    b.HasData(
                        new
                        {
                            Id = "btq_OnnSBtg",
                            FilterNameId = "LAS_TqHl1uE",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3070",
                            StringValue = "RTX 3070"
                        },
                        new
                        {
                            Id = "0hjUHtPJ9LM",
                            FilterNameId = "LAS_TqHl1uE",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3060",
                            StringValue = "RTX 3060"
                        },
                        new
                        {
                            Id = "Mq9lAQ-lO1x",
                            FilterNameId = "LAS_TqHl1uE",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3050",
                            StringValue = "RTX 3050"
                        },
                        new
                        {
                            Id = "wKZf7A2qDVA",
                            FilterNameId = "RKG0WQQos5P",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "AMD Ryzen 7",
                            StringValue = "AMD Ryzen 7"
                        },
                        new
                        {
                            Id = "3pdK592amHV",
                            FilterNameId = "RKG0WQQos5P",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i7",
                            StringValue = "Intel Core i7"
                        },
                        new
                        {
                            Id = "lRMPPc_dHgT",
                            FilterNameId = "RKG0WQQos5P",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i5",
                            StringValue = "Intel Core i5"
                        },
                        new
                        {
                            Id = "qLOWK7dzzJp",
                            FilterNameId = "2VlKvuBkVkE",
                            MaxValue = 3.0,
                            MinValue = 0.20000000000000001,
                            PublicValue = "3 ГБ і менше"
                        },
                        new
                        {
                            Id = "OFuhXyhtZ4m",
                            FilterNameId = "2VlKvuBkVkE",
                            MaxValue = 4.0,
                            MinValue = 4.0,
                            PublicValue = "4 ГБ"
                        },
                        new
                        {
                            Id = "KIvEmbwPp5a",
                            FilterNameId = "2VlKvuBkVkE",
                            MaxValue = 8.0,
                            MinValue = 6.0,
                            PublicValue = "6 - 8 ГБ"
                        },
                        new
                        {
                            Id = "2GWGaSA2-TX",
                            FilterNameId = "2VlKvuBkVkE",
                            MaxValue = 12.0,
                            MinValue = 10.0,
                            PublicValue = "10 - 12 ГБ"
                        },
                        new
                        {
                            Id = "VPuGBDO1flf",
                            FilterNameId = "2VlKvuBkVkE",
                            MaxValue = 24.0,
                            MinValue = 16.0,
                            PublicValue = "16 - 24 ГБ"
                        },
                        new
                        {
                            Id = "5W16fqKSeBb",
                            FilterNameId = "LePYRRvwn-y",
                            MaxValue = 3999.0,
                            MinValue = 3000.0,
                            PublicValue = "3000 - 3999 мА*год "
                        },
                        new
                        {
                            Id = "_2DLT8XgEFe",
                            FilterNameId = "LePYRRvwn-y",
                            MaxValue = 4999.0,
                            MinValue = 4000.0,
                            PublicValue = "4000 - 4999 мА*год "
                        },
                        new
                        {
                            Id = "9D0qaH_BFcr",
                            FilterNameId = "uDNtsDhyl2s",
                            MaxValue = 5.0,
                            MinValue = 4.5999999999999996,
                            PublicValue = "4.6\" - 5\""
                        },
                        new
                        {
                            Id = "EJ9ZuD0c5LL",
                            FilterNameId = "uDNtsDhyl2s",
                            MaxValue = 5.5,
                            MinValue = 5.0099999999999998,
                            PublicValue = "5.01\" - 5.5\""
                        },
                        new
                        {
                            Id = "AxaZNS8nsbV",
                            FilterNameId = "uDNtsDhyl2s",
                            MaxValue = 6.0,
                            MinValue = 5.5,
                            PublicValue = "5.5\" - 6\""
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_GlobalCategories");

                    b.HasData(
                        new
                        {
                            Id = "mYR1stVrTJj",
                            Name = "Смартфони та планшети"
                        },
                        new
                        {
                            Id = "GfocV7mE2pn",
                            Name = "Комп’ютери та ноутбуки"
                        },
                        new
                        {
                            Id = "Nsa5WW9Glrw",
                            Name = "Фото та відео"
                        },
                        new
                        {
                            Id = "1oLjXBxAcCP",
                            Name = "Аудіо"
                        },
                        new
                        {
                            Id = "zcqHcdtHluY",
                            Name = "Мультимедіа"
                        },
                        new
                        {
                            Id = "NFMEEX55TNp",
                            Name = "Ігрова техніка"
                        },
                        new
                        {
                            Id = "ot_4-bxzStF",
                            Name = "Побутова техніка"
                        },
                        new
                        {
                            Id = "v4PwqUJpFTo",
                            Name = "Електронні гаджети"
                        },
                        new
                        {
                            Id = "uREwllKvF9A",
                            Name = "Електро-інструменти"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GlobalCategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique()
                        .HasFilter("[CategoryId] IS NOT NULL");

                    b.HasIndex("GlobalCategoryId")
                        .IsUnique()
                        .HasFilter("[GlobalCategoryId] IS NOT NULL");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = "Pk4mAoDnB6U",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "_v71iQpNSg1"
                        },
                        new
                        {
                            Id = "oJKBpkBqDbs",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "_v71iQpNSg1"
                        },
                        new
                        {
                            Id = "HcwOCSzKrhX",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "_v71iQpNSg1"
                        },
                        new
                        {
                            Id = "NqdkcC8ulY9",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "6iy8dRtcxFy"
                        },
                        new
                        {
                            Id = "iGhwjcNsh6-",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "6iy8dRtcxFy"
                        },
                        new
                        {
                            Id = "GFRQpAnqP66",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "6iy8dRtcxFy"
                        },
                        new
                        {
                            Id = "OjE1vArypTo",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "tXG_owvVEsa"
                        },
                        new
                        {
                            Id = "NG_rXQjIokU",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "tXG_owvVEsa"
                        },
                        new
                        {
                            Id = "sROXrqsObxk",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "tXG_owvVEsa"
                        },
                        new
                        {
                            Id = "_spF1LFdLn0",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "lWrBhHl0NxN"
                        },
                        new
                        {
                            Id = "Ail1zT8xzdk",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "lWrBhHl0NxN"
                        },
                        new
                        {
                            Id = "1YDixx8_6Ae",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "lWrBhHl0NxN"
                        },
                        new
                        {
                            Id = "NPiGMGTMlsz",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "-0amyyKwEXj"
                        },
                        new
                        {
                            Id = "7xREhkM8C2a",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "-0amyyKwEXj"
                        },
                        new
                        {
                            Id = "yHyoOrHPrCa",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "-0amyyKwEXj"
                        },
                        new
                        {
                            Id = "6QdxlzqatIT",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "peMK-21hpVa"
                        },
                        new
                        {
                            Id = "T_eJ22u3B8E",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "peMK-21hpVa"
                        },
                        new
                        {
                            Id = "P0fCKsjkZ5B",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "peMK-21hpVa"
                        },
                        new
                        {
                            Id = "BW_AwYbvr8m",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "D6Sqrz-tK1A"
                        },
                        new
                        {
                            Id = "5rpem0a9wtZ",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "D6Sqrz-tK1A"
                        },
                        new
                        {
                            Id = "rjirGZPE9On",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "D6Sqrz-tK1A"
                        },
                        new
                        {
                            Id = "avDgOkoC1gx",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "-vgTXyNiSVM"
                        },
                        new
                        {
                            Id = "IIHqJ2pd6gB",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "-vgTXyNiSVM"
                        },
                        new
                        {
                            Id = "N77RVIJlQWL",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "-vgTXyNiSVM"
                        },
                        new
                        {
                            Id = "E3TM6wshucR",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "e7HYULDLg6D"
                        },
                        new
                        {
                            Id = "PlnPt_PNq8z",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "e7HYULDLg6D"
                        },
                        new
                        {
                            Id = "67l3ODMpitx",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "e7HYULDLg6D"
                        },
                        new
                        {
                            Id = "E8tSmIfYmXn",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "jQBK-k7cLbI"
                        },
                        new
                        {
                            Id = "cyPUUO0LAWU",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "jQBK-k7cLbI"
                        },
                        new
                        {
                            Id = "iH0rtgWN5w_",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "jQBK-k7cLbI"
                        },
                        new
                        {
                            Id = "KcnCQdcCfAP",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "Zmj5wNPftaG"
                        },
                        new
                        {
                            Id = "_sln8rQrsxg",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "Zmj5wNPftaG"
                        },
                        new
                        {
                            Id = "UAZr_O7OZyu",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "Zmj5wNPftaG"
                        },
                        new
                        {
                            Id = "USbPE65nqpF",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "jzdMuzbRHj2"
                        },
                        new
                        {
                            Id = "CZq-AYGQ9LV",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "jzdMuzbRHj2"
                        },
                        new
                        {
                            Id = "nNOmCZTd2oG",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "jzdMuzbRHj2"
                        },
                        new
                        {
                            Id = "f5u4XP2MN-O",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "ki3Kn_6htCW"
                        },
                        new
                        {
                            Id = "UecnaXJ15h9",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "ki3Kn_6htCW"
                        },
                        new
                        {
                            Id = "IB8jWP1c6Gd",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "ki3Kn_6htCW"
                        },
                        new
                        {
                            Id = "V3XLb7Oe5Po",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "B0XN6vndY3_"
                        },
                        new
                        {
                            Id = "JG0qQruvkmK",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "B0XN6vndY3_"
                        },
                        new
                        {
                            Id = "UI7Oisun-ZA",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "B0XN6vndY3_"
                        },
                        new
                        {
                            Id = "Mzxe1u8zS6p",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "hofVsdNo3ND"
                        },
                        new
                        {
                            Id = "svu7m9pwtYo",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "hofVsdNo3ND"
                        },
                        new
                        {
                            Id = "_Vtvd0ukVxL",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "hofVsdNo3ND"
                        },
                        new
                        {
                            Id = "icVKG6H4W9v",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "yKh1s1nV5pM"
                        },
                        new
                        {
                            Id = "DeyjbWF0rhs",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "yKh1s1nV5pM"
                        },
                        new
                        {
                            Id = "X-1yvebFrNL",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "yKh1s1nV5pM"
                        },
                        new
                        {
                            Id = "OVV8qej8C74",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "TGfnMOmSH3d"
                        },
                        new
                        {
                            Id = "ItkUvYGPQGM",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "TGfnMOmSH3d"
                        },
                        new
                        {
                            Id = "0WwPk2Of04P",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "TGfnMOmSH3d"
                        },
                        new
                        {
                            Id = "UPy2yQz7PO_",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "c4-X9fvMG1L"
                        },
                        new
                        {
                            Id = "dYVe8ahYJlp",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "c4-X9fvMG1L"
                        },
                        new
                        {
                            Id = "3cNS0rUypXL",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "c4-X9fvMG1L"
                        },
                        new
                        {
                            Id = "Zd5PiYtRAK-",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "dBhyDADl-Ul"
                        },
                        new
                        {
                            Id = "tGc97QvdRnK",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "dBhyDADl-Ul"
                        },
                        new
                        {
                            Id = "K1Oo5byhamh",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "dBhyDADl-Ul"
                        },
                        new
                        {
                            Id = "tUVuVaZ8AAq",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "TYVXRnwozOX"
                        },
                        new
                        {
                            Id = "wRwRh4HztnG",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "TYVXRnwozOX"
                        },
                        new
                        {
                            Id = "STBjWneQ7PK",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "TYVXRnwozOX"
                        },
                        new
                        {
                            Id = "NWlNE33HvC2",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "oLbB6F9x96A"
                        },
                        new
                        {
                            Id = "_GQQrWPkxpU",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "oLbB6F9x96A"
                        },
                        new
                        {
                            Id = "U-0cyrWyXQr",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "oLbB6F9x96A"
                        },
                        new
                        {
                            Id = "IVsdV8GOovz",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "Q1k5UPwxNiK"
                        },
                        new
                        {
                            Id = "9X5M5P5n7lx",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "Q1k5UPwxNiK"
                        },
                        new
                        {
                            Id = "b6reuoS1JD_",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "Q1k5UPwxNiK"
                        },
                        new
                        {
                            Id = "WX2nqKJhvBq",
                            CategoryId = "PNpFQMz7MXl",
                            GlobalCategoryId = "GfocV7mE2pn",
                            Name = "laptops.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "-JlxK9-mBBq",
                            GlobalCategoryId = "mYR1stVrTJj",
                            Name = "tablets.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "nr8TYOJ1ajV",
                            CategoryId = "42qYJ6X-8mn",
                            Name = "telephones.webp",
                            Priority = 1
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmartUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SmartUserId");

                    b.ToTable("tbl_Tokens");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Advantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disadvantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Rating")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.Cart", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_cart", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CartItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("tbl_cartItem", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("GlobalCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GlobalCategoryId");

                    b.ToTable("tbl_Categories");

                    b.HasData(
                        new
                        {
                            Id = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 411, DateTimeKind.Utc).AddTicks(9852),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "GfocV7mE2pn",
                            IsDelete = false,
                            Name = "Ноутбуки, ультрабуки та мінібуки"
                        },
                        new
                        {
                            Id = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 411, DateTimeKind.Utc).AddTicks(9948),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "mYR1stVrTJj",
                            IsDelete = false,
                            Name = "Смартфони"
                        },
                        new
                        {
                            Id = "eoEiSXwhNDC",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 411, DateTimeKind.Utc).AddTicks(9962),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "mYR1stVrTJj",
                            IsDelete = false,
                            Name = "Планшети"
                        },
                        new
                        {
                            Id = "D-PUQQxeC9p",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 411, DateTimeKind.Utc).AddTicks(9975),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "mYR1stVrTJj",
                            IsDelete = false,
                            Name = "Аксесуари для смартфонів і планшетів"
                        },
                        new
                        {
                            Id = "p52YCMR6BKZ",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 411, DateTimeKind.Utc).AddTicks(9986),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "GfocV7mE2pn",
                            IsDelete = false,
                            Name = "настільні ПК"
                        },
                        new
                        {
                            Id = "5iN7TINKAiy",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 411, DateTimeKind.Utc).AddTicks(9999),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "GfocV7mE2pn",
                            IsDelete = false,
                            Name = "монітори"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("Dicount")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserLikeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserLikeId");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductEntity");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = "ftq2UZafrl6",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Utc).AddTicks(155),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "test",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "ПК Х123434",
                            Price = 436765,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "KoQFm8YZSYH",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Utc).AddTicks(184),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ми представляємо вам найпотужнішу, саму оснащену, ударотривкий та найефективнішу версію смартфона 2021 року від румунської компанії iHunt .",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "iHunt Titan P13000 PRO 2021",
                            Price = 13940,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "A70Z5xz7jlh",
                            CategoryId = "eoEiSXwhNDC",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Utc).AddTicks(203),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Холодильники з системою NeoFrost ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "BEKO CNA295K20XP",
                            Price = 10999,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "3GM14w1B6Zx",
                            CategoryId = "D-PUQQxeC9p",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Utc).AddTicks(222),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ланцюгова пила Bosch UniversalChain ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Bosch UniversalChain 40",
                            Price = 3958,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "IDuEAtpW-fu",
                            CategoryId = "p52YCMR6BKZ",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Utc).AddTicks(242),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Велосипед Champion Spark 29 ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Champion Spark 29 19.5 Black-neon yellow-white",
                            Price = 5460,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "uoJLVJycEmJ",
                            CategoryId = "5iN7TINKAiy",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Utc).AddTicks(259),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ВНабір паперу офісного Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла",
                            Price = 1199,
                            ShortDescription = "figna"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Adresses", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("tbl_Users", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Laptop", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<string>("GraphicCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RAM")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = "_v71iQpNSg1",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1067),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 7.0
                        },
                        new
                        {
                            Id = "6iy8dRtcxFy",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1081),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer22222 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "Intel Core i5",
                            RAM = 11.0
                        },
                        new
                        {
                            Id = "tXG_owvVEsa",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1089),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer333333 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 10.0
                        },
                        new
                        {
                            Id = "lWrBhHl0NxN",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1094),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer44444444444 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "AMD Ryzen 7",
                            RAM = 12.0
                        },
                        new
                        {
                            Id = "-0amyyKwEXj",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1102),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "peMK-21hpVa",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1110),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "D6Sqrz-tK1A",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1117),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук HP Pavilion 15-cs3006ur Natural Silver",
                            Price = 23999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / Intel Core i5-1135G7 (2.4 - 4.2 ГГц) / RAM 8 ГБ / SSD 256 ГБ / Intel Iris Xe Graphics / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 1.75 кг / сріблястий",
                            GraphicCard = "Intel Iris Xe Graphics",
                            Processor = "Intel Core i5",
                            RAM = 16.0
                        },
                        new
                        {
                            Id = "-vgTXyNiSVM",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1124),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Lenovo IdeaPad 5 Pro 16ACH6",
                            Price = 29999,
                            ShortDescription = "Екран 16\" IPS (2560x1600) WQXGA, матовий / AMD Ryzen 7 5800H (3.2 - 4.4 ГГц) / RAM 16 ГБ / SSD 512 ГБ / NVIDIA GeForce RTX 3050, 4 ГБ / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 2.2 кг / сірий",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 2.0
                        },
                        new
                        {
                            Id = "e7HYULDLg6D",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1130),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 8 ГБ / SSD 128 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 3.0
                        },
                        new
                        {
                            Id = "jQBK-k7cLbI",
                            CategoryId = "PNpFQMz7MXl",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1136),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i5",
                            RAM = 1.0
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Telephone", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("int");

                    b.Property<double>("DisplayDiagonal")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Telephone");

                    b.HasData(
                        new
                        {
                            Id = "Zmj5wNPftaG",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1230),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple iPhone 14 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3100,
                            DisplayDiagonal = 6.4000000000000004
                        },
                        new
                        {
                            Id = "jzdMuzbRHj2",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1238),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i111",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4100,
                            DisplayDiagonal = 5.5999999999999996
                        },
                        new
                        {
                            Id = "ki3Kn_6htCW",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1245),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i222",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3600,
                            DisplayDiagonal = 5.5
                        },
                        new
                        {
                            Id = "B0XN6vndY3_",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1252),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i333313",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3900,
                            DisplayDiagonal = 5.2000000000000002
                        },
                        new
                        {
                            Id = "hofVsdNo3ND",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1258),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мо4444444 4414 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4800,
                            DisplayDiagonal = 8.4000000000000004
                        },
                        new
                        {
                            Id = "yKh1s1nV5pM",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1264),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "М55555555 Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4900,
                            DisplayDiagonal = 6.2999999999999998
                        },
                        new
                        {
                            Id = "TGfnMOmSH3d",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1270),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний 66666666B Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4200,
                            DisplayDiagonal = 5.0999999999999996
                        },
                        new
                        {
                            Id = "c4-X9fvMG1L",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1279),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобіл77777777 28GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4600,
                            DisplayDiagonal = 4.9000000000000004
                        },
                        new
                        {
                            Id = "dBhyDADl-Ul",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1286),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Google Pixel 7",
                            Price = 32999,
                            ShortDescription = "Екран (6.2\", OLED, 2400x1080) / Qualcomm Snapdragon 778G / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / eSIM / Android 12",
                            BatteryCapacity = 4500,
                            DisplayDiagonal = 6.2000000000000002
                        },
                        new
                        {
                            Id = "TYVXRnwozOX",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1291),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Sony Xperia 1 IV",
                            Price = 74999,
                            ShortDescription = "Екран (6.5\", OLED, 3840x1644) / Qualcomm Snapdragon 888 / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 10 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.5
                        },
                        new
                        {
                            Id = "oLbB6F9x96A",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1300),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Xiaomi Mi 12",
                            Price = 39999,
                            ShortDescription = "Екран (6.81\", OLED, 3200x1440) / Qualcomm Snapdragon 8 Gen 1 / основна квадро-камера: 50 Мп + 12 Мп + 8 Мп + 2 Мп, фронтальна камера: 32 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Dual SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.8099999999999996
                        },
                        new
                        {
                            Id = "Q1k5UPwxNiK",
                            CategoryId = "42qYJ6X-8mn",
                            DateCreated = new DateTime(2023, 9, 11, 13, 5, 13, 412, DateTimeKind.Local).AddTicks(1307),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Samsung Galaxy S22",
                            Price = 45999,
                            ShortDescription = "Екран (6.1\", Dynamic AMOLED 2X, 1080x2400) / Samsung Exynos 2200 / основна квадро-камера: 50 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 10 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 4000,
                            DisplayDiagonal = 6.0999999999999996
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("FilterNames")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.FilterName", "FilterName")
                        .WithMany("Values")
                        .HasForeignKey("FilterNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilterName");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "CategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "GlobalCategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Category");

                    b.Navigation("GlobalCategory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("SmartUserId");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CartItem", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithMany("Categories")
                        .HasForeignKey("GlobalCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlobalCategory");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "UserLike")
                        .WithMany("LikedProducts")
                        .HasForeignKey("UserLikeId");

                    b.Navigation("Category");

                    b.Navigation("UserLike");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Image")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Navigation("FilterNames");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Comments");

                    b.Navigation("LikedProducts");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
