// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartBuyApi.DataBase;

#nullable disable

namespace SmartBuyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230808140932_added-like")]
    partial class addedlike
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Metric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("tbl_FilterNames");

                    b.HasData(
                        new
                        {
                            Id = "l1RcsEbWIdu",
                            CategoryId = "2OFgF_KzTmU",
                            Name = "GraphicCard",
                            PublicName = "Дискретна відеокарта"
                        },
                        new
                        {
                            Id = "Wv8q0KhyiOY",
                            CategoryId = "2OFgF_KzTmU",
                            Name = "Processor",
                            PublicName = "Процесор"
                        },
                        new
                        {
                            Id = "uKF3ccf3R_-",
                            CategoryId = "2OFgF_KzTmU",
                            Metric = "ГБ",
                            Name = "RAM",
                            PublicName = "Обсяг оперативної пам'яті"
                        },
                        new
                        {
                            Id = "GT8i0RoprRO",
                            CategoryId = "Vx2sgsEBKpu",
                            Metric = "мА·год",
                            Name = "BatteryCapacity",
                            PublicName = "Ємність акумулятора"
                        },
                        new
                        {
                            Id = "OF4SY8MiOPB",
                            CategoryId = "Vx2sgsEBKpu",
                            Metric = "\"",
                            Name = "DisplayDiagonal",
                            PublicName = "Діагональ екрана"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilterNameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("PublicValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilterNameId");

                    b.ToTable("tbl_FilterValues");

                    b.HasData(
                        new
                        {
                            Id = "4ANuQ2wlg_h",
                            FilterNameId = "l1RcsEbWIdu",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3070",
                            StringValue = "RTX 3070"
                        },
                        new
                        {
                            Id = "UL8BIir5D1t",
                            FilterNameId = "l1RcsEbWIdu",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3060",
                            StringValue = "RTX 3060"
                        },
                        new
                        {
                            Id = "UiTHLdnie42",
                            FilterNameId = "l1RcsEbWIdu",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "GeForce RTX 3050",
                            StringValue = "RTX 3050"
                        },
                        new
                        {
                            Id = "q0sZRqzxlED",
                            FilterNameId = "Wv8q0KhyiOY",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "AMD Ryzen 7",
                            StringValue = "AMD Ryzen 7"
                        },
                        new
                        {
                            Id = "XVpuNTXAC1p",
                            FilterNameId = "Wv8q0KhyiOY",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i7",
                            StringValue = "Intel Core i7"
                        },
                        new
                        {
                            Id = "B3poN5TUWRE",
                            FilterNameId = "Wv8q0KhyiOY",
                            MaxValue = 0.0,
                            MinValue = 0.0,
                            PublicValue = "Intel Core i5",
                            StringValue = "Intel Core i5"
                        },
                        new
                        {
                            Id = "dMgbE7WPW_n",
                            FilterNameId = "uKF3ccf3R_-",
                            MaxValue = 3.0,
                            MinValue = 0.20000000000000001,
                            PublicValue = "3 ГБ і менше"
                        },
                        new
                        {
                            Id = "nCIn_QJJvvZ",
                            FilterNameId = "uKF3ccf3R_-",
                            MaxValue = 4.0,
                            MinValue = 4.0,
                            PublicValue = "4 ГБ"
                        },
                        new
                        {
                            Id = "2TV76joo51L",
                            FilterNameId = "uKF3ccf3R_-",
                            MaxValue = 8.0,
                            MinValue = 6.0,
                            PublicValue = "6 - 8 ГБ"
                        },
                        new
                        {
                            Id = "kfL45jrf4ib",
                            FilterNameId = "uKF3ccf3R_-",
                            MaxValue = 12.0,
                            MinValue = 10.0,
                            PublicValue = "10 - 12 ГБ"
                        },
                        new
                        {
                            Id = "tUr9ESt3FXN",
                            FilterNameId = "uKF3ccf3R_-",
                            MaxValue = 24.0,
                            MinValue = 16.0,
                            PublicValue = "16 - 24 ГБ"
                        },
                        new
                        {
                            Id = "mbA1iPt20kD",
                            FilterNameId = "GT8i0RoprRO",
                            MaxValue = 3999.0,
                            MinValue = 3000.0,
                            PublicValue = "3000 - 3999 мА*год "
                        },
                        new
                        {
                            Id = "2AGMhKahQdG",
                            FilterNameId = "GT8i0RoprRO",
                            MaxValue = 4999.0,
                            MinValue = 4000.0,
                            PublicValue = "4000 - 4999 мА*год "
                        },
                        new
                        {
                            Id = "sSY9IAYjAxf",
                            FilterNameId = "OF4SY8MiOPB",
                            MaxValue = 5.0,
                            MinValue = 4.5999999999999996,
                            PublicValue = "4.6\" - 5\""
                        },
                        new
                        {
                            Id = "WKlLzUC9lHh",
                            FilterNameId = "OF4SY8MiOPB",
                            MaxValue = 5.5,
                            MinValue = 5.0099999999999998,
                            PublicValue = "5.01\" - 5.5\""
                        },
                        new
                        {
                            Id = "qvhS9ytlIHs",
                            FilterNameId = "OF4SY8MiOPB",
                            MaxValue = 6.0,
                            MinValue = 5.5,
                            PublicValue = "5.5\" - 6\""
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_GlobalCategories");

                    b.HasData(
                        new
                        {
                            Id = "HbpNMb3LlxB",
                            Name = "Смартфони та планшети"
                        },
                        new
                        {
                            Id = "FFqPozYMIxQ",
                            Name = "Комп’ютери та ноутбуки"
                        },
                        new
                        {
                            Id = "DrQ_Gke2c_k",
                            Name = "Фото та відео"
                        },
                        new
                        {
                            Id = "QPYXpFRFAe5",
                            Name = "Аудіо"
                        },
                        new
                        {
                            Id = "lD_jTHEZs0V",
                            Name = "Мультимедіа"
                        },
                        new
                        {
                            Id = "-fgpBOcDQ0L",
                            Name = "Ігрова техніка"
                        },
                        new
                        {
                            Id = "s-KOpDaVWHA",
                            Name = "Побутова техніка"
                        },
                        new
                        {
                            Id = "eQf-av2wtwd",
                            Name = "Електронні гаджети"
                        },
                        new
                        {
                            Id = "WHBhwCHV26h",
                            Name = "Електро-інструменти"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GlobalCategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique()
                        .HasFilter("[CategoryId] IS NOT NULL");

                    b.HasIndex("GlobalCategoryId")
                        .IsUnique()
                        .HasFilter("[GlobalCategoryId] IS NOT NULL");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = "peCHtkeOYpE",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "1L7FwJ-XrvI"
                        },
                        new
                        {
                            Id = "yyxwQDSRLXF",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "1L7FwJ-XrvI"
                        },
                        new
                        {
                            Id = "XcwL76T1niN",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "1L7FwJ-XrvI"
                        },
                        new
                        {
                            Id = "VQG60bG4EHQ",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "0iX61DqFhHb"
                        },
                        new
                        {
                            Id = "qwo3rp3a29T",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "0iX61DqFhHb"
                        },
                        new
                        {
                            Id = "yKYk5ohqeiH",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "0iX61DqFhHb"
                        },
                        new
                        {
                            Id = "B8Pp3JJeLf9",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "q5Acllh3zdi"
                        },
                        new
                        {
                            Id = "cSkVHP5lmEE",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "q5Acllh3zdi"
                        },
                        new
                        {
                            Id = "w4A_sXUiv5E",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "q5Acllh3zdi"
                        },
                        new
                        {
                            Id = "ksu8fZS2zmL",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "hCmZIJwodLn"
                        },
                        new
                        {
                            Id = "FAdKNlLXGFm",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "hCmZIJwodLn"
                        },
                        new
                        {
                            Id = "VcsnSUztFcS",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "hCmZIJwodLn"
                        },
                        new
                        {
                            Id = "_3YlEbyTvJL",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "NKuySrzghp3"
                        },
                        new
                        {
                            Id = "F6D5Nqj29Ko",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "NKuySrzghp3"
                        },
                        new
                        {
                            Id = "zGiTVw44cU9",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "NKuySrzghp3"
                        },
                        new
                        {
                            Id = "HEZ0M-9ZDNW",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "uZxb3IL5xr1"
                        },
                        new
                        {
                            Id = "ZaSm5bEYKVc",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "uZxb3IL5xr1"
                        },
                        new
                        {
                            Id = "cIhLMLRUTgc",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "uZxb3IL5xr1"
                        },
                        new
                        {
                            Id = "MGuw1HCmHjq",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "PMSJkmZNtPj"
                        },
                        new
                        {
                            Id = "yd4gI2PtaT3",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "PMSJkmZNtPj"
                        },
                        new
                        {
                            Id = "cV1WxDQR4WB",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "PMSJkmZNtPj"
                        },
                        new
                        {
                            Id = "UuX5aHsxlnE",
                            Name = "2_1.webp",
                            Priority = 1,
                            ProductId = "FMuc4oCEWF-"
                        },
                        new
                        {
                            Id = "qCZH8o_C6wa",
                            Name = "2_2.webp",
                            Priority = 2,
                            ProductId = "FMuc4oCEWF-"
                        },
                        new
                        {
                            Id = "VOf5QApxaRZ",
                            Name = "2_3.webp",
                            Priority = 3,
                            ProductId = "FMuc4oCEWF-"
                        },
                        new
                        {
                            Id = "NBtmLiqw9jq",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "yh43ItPdaIr"
                        },
                        new
                        {
                            Id = "ey-FSfZhUZm",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "yh43ItPdaIr"
                        },
                        new
                        {
                            Id = "pQmw6IdXUcn",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "yh43ItPdaIr"
                        },
                        new
                        {
                            Id = "ASojZYTtmwu",
                            Name = "1_1.webp",
                            Priority = 1,
                            ProductId = "ynqS3CNCoG-"
                        },
                        new
                        {
                            Id = "CkKjXL5LqTD",
                            Name = "1_2.webp",
                            Priority = 2,
                            ProductId = "ynqS3CNCoG-"
                        },
                        new
                        {
                            Id = "otGA0Lc_fap",
                            Name = "1_3.webp",
                            Priority = 3,
                            ProductId = "ynqS3CNCoG-"
                        },
                        new
                        {
                            Id = "D4GIma2jzGZ",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "6PP0XVtJ8r2"
                        },
                        new
                        {
                            Id = "_Rj2aBGcGfE",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "6PP0XVtJ8r2"
                        },
                        new
                        {
                            Id = "vtji15g9JQa",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "6PP0XVtJ8r2"
                        },
                        new
                        {
                            Id = "qHAa8vdezN5",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "DbZT4KbYNkF"
                        },
                        new
                        {
                            Id = "oqXdfQvUeM3",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "DbZT4KbYNkF"
                        },
                        new
                        {
                            Id = "QQULvKTwgJI",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "DbZT4KbYNkF"
                        },
                        new
                        {
                            Id = "AELsV8o3gcK",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "q7nhQhGIkaU"
                        },
                        new
                        {
                            Id = "NLmszrrX-0y",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "q7nhQhGIkaU"
                        },
                        new
                        {
                            Id = "HGxrUv_cjZe",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "q7nhQhGIkaU"
                        },
                        new
                        {
                            Id = "iIfWRS8WTXP",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "IhC_6QMeKpB"
                        },
                        new
                        {
                            Id = "MZJIg0_oa56",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "IhC_6QMeKpB"
                        },
                        new
                        {
                            Id = "Bsv3kTPLTZV",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "IhC_6QMeKpB"
                        },
                        new
                        {
                            Id = "aJXytULEJbf",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "YQSs2j4R7Sm"
                        },
                        new
                        {
                            Id = "g0MklfNghfQ",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "YQSs2j4R7Sm"
                        },
                        new
                        {
                            Id = "r4mYV69DY5N",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "YQSs2j4R7Sm"
                        },
                        new
                        {
                            Id = "76UjwT4kLy-",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "mDrE6YJwkle"
                        },
                        new
                        {
                            Id = "X6epzyd1RiO",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "mDrE6YJwkle"
                        },
                        new
                        {
                            Id = "fbb8O5g2guG",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "mDrE6YJwkle"
                        },
                        new
                        {
                            Id = "gAvCKSat-dc",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "SNlDrtKa6S-"
                        },
                        new
                        {
                            Id = "eZ90leCImN6",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "SNlDrtKa6S-"
                        },
                        new
                        {
                            Id = "pxJeKL-Mjnf",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "SNlDrtKa6S-"
                        },
                        new
                        {
                            Id = "e5pSBXZzGOQ",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "6ySNErAfzFH"
                        },
                        new
                        {
                            Id = "xWAw59Nfwcg",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "6ySNErAfzFH"
                        },
                        new
                        {
                            Id = "GjhY0VSYUFG",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "6ySNErAfzFH"
                        },
                        new
                        {
                            Id = "8jUF2vChY3s",
                            Name = "3_1.webp",
                            Priority = 1,
                            ProductId = "XV2aet2fyF3"
                        },
                        new
                        {
                            Id = "4WieeQXdcow",
                            Name = "3_2.webp",
                            Priority = 2,
                            ProductId = "XV2aet2fyF3"
                        },
                        new
                        {
                            Id = "kai36vz54LW",
                            Name = "3_3.webp",
                            Priority = 3,
                            ProductId = "XV2aet2fyF3"
                        },
                        new
                        {
                            Id = "dCD0XdVAGmv",
                            Name = "4_1.webp",
                            Priority = 1,
                            ProductId = "k7W1KND1YIH"
                        },
                        new
                        {
                            Id = "kKK3jbwJ24I",
                            Name = "4_2.webp",
                            Priority = 2,
                            ProductId = "k7W1KND1YIH"
                        },
                        new
                        {
                            Id = "ajcWmM1qMqT",
                            Name = "4_3.webp",
                            Priority = 3,
                            ProductId = "k7W1KND1YIH"
                        },
                        new
                        {
                            Id = "McSs3HAHKCP",
                            Name = "5_1.webp",
                            Priority = 1,
                            ProductId = "uT8GuZIwvsa"
                        },
                        new
                        {
                            Id = "-lEm5zusw_P",
                            Name = "5_2.webp",
                            Priority = 2,
                            ProductId = "uT8GuZIwvsa"
                        },
                        new
                        {
                            Id = "yLCnjdC08qq",
                            Name = "5_3.webp",
                            Priority = 3,
                            ProductId = "uT8GuZIwvsa"
                        },
                        new
                        {
                            Id = "oGHrReJfzrN",
                            Name = "6_1.webp",
                            Priority = 1,
                            ProductId = "isB3Yw8qjmQ"
                        },
                        new
                        {
                            Id = "r3v9mr8BgpJ",
                            Name = "6_2.webp",
                            Priority = 2,
                            ProductId = "isB3Yw8qjmQ"
                        },
                        new
                        {
                            Id = "ghBg13P1OaY",
                            Name = "6_3.webp",
                            Priority = 3,
                            ProductId = "isB3Yw8qjmQ"
                        },
                        new
                        {
                            Id = "SzeJqzRZ7YK",
                            CategoryId = "2OFgF_KzTmU",
                            GlobalCategoryId = "FFqPozYMIxQ",
                            Name = "laptops.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "rRThuBd_pdA",
                            GlobalCategoryId = "HbpNMb3LlxB",
                            Name = "tablets.webp",
                            Priority = 1
                        },
                        new
                        {
                            Id = "lf43BksrIHO",
                            CategoryId = "Vx2sgsEBKpu",
                            Name = "telephones.webp",
                            Priority = 1
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmartUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SmartUserId");

                    b.ToTable("tbl_Tokens");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Advantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disadvantages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Rating")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("GlobalCategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("GlobalCategoryId");

                    b.ToTable("tbl_Categories");

                    b.HasData(
                        new
                        {
                            Id = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6379),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "FFqPozYMIxQ",
                            IsDelete = false,
                            Name = "Ноутбуки, ультрабуки та мінібуки"
                        },
                        new
                        {
                            Id = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6450),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "HbpNMb3LlxB",
                            IsDelete = false,
                            Name = "Смартфони"
                        },
                        new
                        {
                            Id = "RaGHjd6XIBO",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6455),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "HbpNMb3LlxB",
                            IsDelete = false,
                            Name = "Планшети"
                        },
                        new
                        {
                            Id = "wWyO_aaf2sf",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6460),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "HbpNMb3LlxB",
                            IsDelete = false,
                            Name = "Аксесуари для смартфонів і планшетів"
                        },
                        new
                        {
                            Id = "B9PUc9OIW84",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6463),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "FFqPozYMIxQ",
                            IsDelete = false,
                            Name = "настільні ПК"
                        },
                        new
                        {
                            Id = "nELJ-x_uNrI",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6469),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "description",
                            GlobalCategoryId = "FFqPozYMIxQ",
                            IsDelete = false,
                            Name = "монітори"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastEdit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("Dicount")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserLikeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserLikeId");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductEntity");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = "9KhETYLjL7i",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6511),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "test",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "ПК Х123434",
                            Price = 436765,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "3JO8EugZH-O",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6518),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ми представляємо вам найпотужнішу, саму оснащену, ударотривкий та найефективнішу версію смартфона 2021 року від румунської компанії iHunt .",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "iHunt Titan P13000 PRO 2021",
                            Price = 13940,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "fxPWzV077nw",
                            CategoryId = "RaGHjd6XIBO",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6523),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Холодильники з системою NeoFrost ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "BEKO CNA295K20XP",
                            Price = 10999,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "w2YxF8fWEdg",
                            CategoryId = "wWyO_aaf2sf",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6527),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ланцюгова пила Bosch UniversalChain ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Bosch UniversalChain 40",
                            Price = 3958,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "dkMqS8rHQbe",
                            CategoryId = "B9PUc9OIW84",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6531),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Велосипед Champion Spark 29 ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Champion Spark 29 19.5 Black-neon yellow-white",
                            Price = 5460,
                            ShortDescription = "figna"
                        },
                        new
                        {
                            Id = "RoUVr3sc2h5",
                            CategoryId = "nELJ-x_uNrI",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Utc).AddTicks(6535),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ВНабір паперу офісного Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла ",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Zoom Stora Enso А4 80 г/м2 клас С + 5 пачок по 500 аркушів Біла",
                            Price = 1199,
                            ShortDescription = "figna"
                        });
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_Adresses", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("tbl_Users", (string)null);
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Laptop", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<string>("GraphicCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RAM")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = "1L7FwJ-XrvI",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6760),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 7.0
                        },
                        new
                        {
                            Id = "0iX61DqFhHb",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6763),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer22222 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "Intel Core i5",
                            RAM = 11.0
                        },
                        new
                        {
                            Id = "q5Acllh3zdi",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6765),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer333333 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 10.0
                        },
                        new
                        {
                            Id = "hCmZIJwodLn",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6767),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer44444444444 Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "AMD Ryzen 7",
                            RAM = 12.0
                        },
                        new
                        {
                            Id = "NKuySrzghp3",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6769),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "uZxb3IL5xr1",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6771),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i7",
                            RAM = 4.0
                        },
                        new
                        {
                            Id = "PMSJkmZNtPj",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6773),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук HP Pavilion 15-cs3006ur Natural Silver",
                            Price = 23999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / Intel Core i5-1135G7 (2.4 - 4.2 ГГц) / RAM 8 ГБ / SSD 256 ГБ / Intel Iris Xe Graphics / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 1.75 кг / сріблястий",
                            GraphicCard = "Intel Iris Xe Graphics",
                            Processor = "Intel Core i5",
                            RAM = 16.0
                        },
                        new
                        {
                            Id = "FMuc4oCEWF-",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6775),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Lenovo IdeaPad 5 Pro 16ACH6",
                            Price = 29999,
                            ShortDescription = "Екран 16\" IPS (2560x1600) WQXGA, матовий / AMD Ryzen 7 5800H (3.2 - 4.4 ГГц) / RAM 16 ГБ / SSD 512 ГБ / NVIDIA GeForce RTX 3050, 4 ГБ / без ОД / Wi-Fi / Bluetooth / веб-камера / Windows 11 Home / 2.2 кг / сірий",
                            GraphicCard = "RTX 3050",
                            Processor = "AMD Ryzen 7",
                            RAM = 2.0
                        },
                        new
                        {
                            Id = "yh43ItPdaIr",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6777),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 8 ГБ / SSD 128 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3070",
                            Processor = "Intel Core i7",
                            RAM = 3.0
                        },
                        new
                        {
                            Id = "ynqS3CNCoG-",
                            CategoryId = "2OFgF_KzTmU",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6779),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Ноутбук Acer Aspire 7 A715-42G-R3EZ (NH.QBFEU.00C) Charcoal Black",
                            Price = 28999,
                            ShortDescription = "Екран 15.6\" IPS (1920x1080) Full HD, матовий / AMD Ryzen 5 5500U (2.1 - 4.0 ГГц) / RAM 16 ГБ / SSD 512 ГБ / nVidia GeForce GTX 1650, 4 ГБ / без ОД / LAN / Wi-Fi / Bluetooth / веб-камера / без ОС / 2.15 кг / чорний",
                            GraphicCard = "RTX 3060",
                            Processor = "Intel Core i5",
                            RAM = 1.0
                        });
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.SpecializedProducts.Telephone", b =>
                {
                    b.HasBaseType("SmartBuyApi.Data.DataBase.Tables.ProductEntity");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("int");

                    b.Property<double>("DisplayDiagonal")
                        .HasColumnType("float");

                    b.ToTable("tbl_Products");

                    b.HasDiscriminator().HasValue("Telephone");

                    b.HasData(
                        new
                        {
                            Id = "6PP0XVtJ8r2",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6851),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple iPhone 14 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3100,
                            DisplayDiagonal = 6.4000000000000004
                        },
                        new
                        {
                            Id = "DbZT4KbYNkF",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6853),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i111",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4100,
                            DisplayDiagonal = 5.5999999999999996
                        },
                        new
                        {
                            Id = "q7nhQhGIkaU",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6855),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i222",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3600,
                            DisplayDiagonal = 5.5
                        },
                        new
                        {
                            Id = "IhC_6QMeKpB",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6858),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Apple i333313",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 3900,
                            DisplayDiagonal = 5.2000000000000002
                        },
                        new
                        {
                            Id = "YQSs2j4R7Sm",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6861),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мо4444444 4414 Pro Max 128GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4800,
                            DisplayDiagonal = 8.4000000000000004
                        },
                        new
                        {
                            Id = "mDrE6YJwkle",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6862),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "М55555555 Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4900,
                            DisplayDiagonal = 6.2999999999999998
                        },
                        new
                        {
                            Id = "SNlDrtKa6S-",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6865),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний 66666666B Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4200,
                            DisplayDiagonal = 5.0999999999999996
                        },
                        new
                        {
                            Id = "6ySNErAfzFH",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6867),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобіл77777777 28GB Deep Purple",
                            Price = 54999,
                            ShortDescription = "Екран (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / основна квадро-камера: 48 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / iOS 16",
                            BatteryCapacity = 4600,
                            DisplayDiagonal = 4.9000000000000004
                        },
                        new
                        {
                            Id = "XV2aet2fyF3",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6868),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Google Pixel 7",
                            Price = 32999,
                            ShortDescription = "Екран (6.2\", OLED, 2400x1080) / Qualcomm Snapdragon 778G / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 12 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / eSIM / Android 12",
                            BatteryCapacity = 4500,
                            DisplayDiagonal = 6.2000000000000002
                        },
                        new
                        {
                            Id = "k7W1KND1YIH",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6870),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Sony Xperia 1 IV",
                            Price = 74999,
                            ShortDescription = "Екран (6.5\", OLED, 3840x1644) / Qualcomm Snapdragon 888 / основна камера: 64 Мп + 16 Мп + 12 Мп, фронтальна камера: 10 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.5
                        },
                        new
                        {
                            Id = "uT8GuZIwvsa",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6872),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Xiaomi Mi 12",
                            Price = 39999,
                            ShortDescription = "Екран (6.81\", OLED, 3200x1440) / Qualcomm Snapdragon 8 Gen 1 / основна квадро-камера: 50 Мп + 12 Мп + 8 Мп + 2 Мп, фронтальна камера: 32 Мп / 256 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Dual SIM / Android 12",
                            BatteryCapacity = 5000,
                            DisplayDiagonal = 6.8099999999999996
                        },
                        new
                        {
                            Id = "isB3Yw8qjmQ",
                            CategoryId = "Vx2sgsEBKpu",
                            DateCreated = new DateTime(2023, 8, 8, 16, 9, 31, 850, DateTimeKind.Local).AddTicks(6874),
                            DateLastEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Доооооовгий опис",
                            Dicount = 0,
                            IsDelete = false,
                            Name = "Мобільний телефон Samsung Galaxy S22",
                            Price = 45999,
                            ShortDescription = "Екран (6.1\", Dynamic AMOLED 2X, 1080x2400) / Samsung Exynos 2200 / основна квадро-камера: 50 Мп + 12 Мп + 12 Мп + 12 Мп, фронтальна камера: 10 Мп / 128 ГБ вбудованої пам'яті / 3G / LTE / 5G / GPS / Nano-SIM / Android 12",
                            BatteryCapacity = 4000,
                            DisplayDiagonal = 6.0999999999999996
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("FilterNames")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterValue", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.FilterName", "FilterName")
                        .WithMany("Values")
                        .HasForeignKey("FilterNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilterName");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ImageEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "CategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithOne("Image")
                        .HasForeignKey("SmartBuyApi.Data.DataBase.Entities.ImageEntity", "GlobalCategoryId");

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Category");

                    b.Navigation("GlobalCategory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.RefreshToken", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("SmartUserId");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.ReviewEntity", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.ProductEntity", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", "GlobalCategory")
                        .WithMany("Categories")
                        .HasForeignKey("GlobalCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlobalCategory");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.HasOne("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "UserLike")
                        .WithMany("LikedProducts")
                        .HasForeignKey("UserLikeId");

                    b.Navigation("Category");

                    b.Navigation("UserLike");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.Adress", b =>
                {
                    b.HasOne("SmartBuyApi.DataBase.Tables.SmartUser", "User")
                        .WithMany("Adresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.FilterName", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Entities.GlobalCategoryEntity", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Image")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.CategoryEntity", b =>
                {
                    b.Navigation("FilterNames");

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartBuyApi.Data.DataBase.Tables.ProductEntity", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("SmartBuyApi.DataBase.Tables.SmartUser", b =>
                {
                    b.Navigation("Adresses");

                    b.Navigation("Comments");

                    b.Navigation("LikedProducts");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
